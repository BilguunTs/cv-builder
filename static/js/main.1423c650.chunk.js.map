{"version":3,"sources":["components/Draggables/utils.js","Context/config.js","Context/index.js","components/layout/header.js","components/layout/body.js","components/layout/footer.js","components/utils/Toaster.js","components/Icons/RenderIcon.js","components/CV/Status/treeview.js","components/CV/components/Header.js","components/CV/components/Summary.js","components/CV/mainblocks/Workhistory.js","components/CV/mainblocks/Education.js","components/CV/mainblocks/Contact.js","components/CV/Status/Ratings.js","components/CV/mainblocks/Skill.js","components/CV/mainblocks/Language.js","components/CV/components/BlockBase.js","components/CV/components/BlockContainer.js","components/CV/components/Section.js","components/CV/components/MainDraggables.js","PDFconvert/PrintButton.js","PDFconvert/utils.js","PDFconvert/index.js","components/CV/index.js","components/main.js","components/DocumentEditor/ClassicEditor.js","components/CV/components/DatePicker.js","components/CV/BlockForms/workhistoryform.js","components/CV/BlockForms/educationform.js","components/CV/Status/component/Star.js","components/CV/Status/component/star-rating.js","components/CV/BlockForms/skillform.js","components/CV/BlockForms/languageform.js","components/CV/BlockForms/contactform.js","components/Drawer/index.js","Context/Global_Dialog.js","App.js","serviceWorker.js","index.js"],"names":["array_move","arr","old_index","new_index","length","k","push","undefined","splice","config","block","education","id","fieldofstudy","degree","school","schoollocation","startDate","endDate","description","work_history","jobtitle","employer","city","state","workdetail","contact","first_name","last_name","profession","street_address","state_province","zipcode","phone","email_address","social_links","skill","name","value","language","section","title","type","blocks","dialog","body","action","snippets","effect_types","FADE","GROW","SLIDE","ZOOM","TC_types","PRIMARY","SUCCESS","WARNING","DANGER","dialog_types","Materials","degrees","block_types","Header","Professional_summary","Skills","Education","Contact","Work_History","Accomplishments","Affiliations","Additional_Information","Software","Certifications","Interests","section_types","SampleSectionButtons","icon","text","Contextulize","createContext","ContextWrapper","props","edit_header","heading","edit_summary","summary","openDialog","obj","Object","assign","isOpen","setState","closeDialog","setTargetBlock","target","column","sectionIndex","blockIndex","blockType","sectiontitle","targetBlock","rightCollumn","sections","leftCollumn","newTarget","update","$set","onEdit_currentTargetBlock","targetkey","hasOwnProperty","toString","_updateBlock","openPreView","isPreviewOpen","closePreView","check","i","existing_section_types","console","log","create_section","instance","_init_Section","toast","content","$push","setTimeout","deleteSection","_toggle_TOAST_with_EFFECT","$splice","create_block","_init_Block","snippents","delete_block","open_sideDrawer","sidedrawer","close_sideDrawer","setFocuse","el","focusedElement","Off_GlobalDrag","globalDrag","isOn","targetID","_generateRandomID","Math","random","substr","_update_blockIndex_of_targetBlock","index","_update_targetBlock","destination","droppableId","_blockSort","sectionID","oldIndex","newIndex","newArray","result","findIndex","s","fixedObj","JSON","stringify","_toggle_TOAST","toastType","toastContent","effectType","duration","effect","_isSectionAlreadyExists","concat","globalColor","gfond","callout","header","targetEl","email","this","array","Array","from","source","find","draggableId","newTitle","Provider","editHeader","editSummary","onDragStart","e","onDragEnd","setfocus","changeSectionTitle","cL","sI","nV","blockstatus","onEditBlock","v","openSideDrawer","closeSideDrawer","createSection","ty","ti","c","createBlock","t","deleteBlock","bI","openPreview","closePreview","children","React","Component","connect","Consumer","store","context","align","Alignment","LEFT","className","Classes","MINIMAL","RIGHT","Body","Footer","AppToaster","Toaster","create","position","Position","BOTTOM_LEFT","RenderIcon","size","gC","color","Size","useState","currentS","setCurrentS","titleRef","useRef","boundary","canEscapeKeyClose","exampleIndex","hasBackdrop","inheritDarkTheme","interactionKind","PopoverInteractionKind","CLICK","minimal","modifiers","arrow","enabled","flip","keepTogether","preventOverflow","sliderValue","usePortal","popoverProps","setPopover","handleAddSection","toggleCurrent","handleCancel","style","margin","padding","map","key","portalClassName","enforceFocus","fill","rightIcon","minWidth","height","background","display","gridTemplateColumns","justifyContent","SSB","b","onClick","inputRef","placeholder","defaultValue","DIALOG_BODY","label","labelFor","renderSectionForm","bottom","right","intent","bind","SimpleTemp","fontSize","lineHeight","fontFamily","alwaysRenderInput","maxLength","onChange","multiline","maxLines","minLines","trim","WorkHistory","textAlign","maxWidth","status","whiteSpace","wordWrap","gridGap","marginTop","marginBottom","RatingBar","max","scale","width","backgroundColor","transition","columns","renderWord","handlemouseover","active","handlemouseOut","handlemouseClick","RenderBlockType","handleDeleteBlock","grabbed","design","container","boxShadow","borderRadius","cursor","transform","zIndex","default","flex1","flexGrow","flex3","showIcon","opacity","visibility","hideIcon","isDragging","dragHandler","onMouseOver","onMouseOut","onMouseDown","designbody","alignItems","BlockContainer","provided","snapshot","ref","innerRef","lists","o","draggableProps","isRight","isLeft","sectionindex","dragHandleProps","SectionBase","setActive","editable","setEditable","isDraging","useEffect","Style","transitionTimingFunction","defaultcontainer","columnis","toggleEditMode","sectionType","draghandler","DIALOG_HEADER","paddingLeft","ICON","autoFocus","mainDraggable","border","isDraggingOver","minHeight","item","Section","isActive","PrintButton","generatePDF","px","mm","input","document","getElementById","inputHeightMm","offsetHeight","floor","html2canvas","scrollY","then","canvas","pdf","imgData","toDataURL","jsPDF","addImage","save","onClose","canOutsideClickClose","useTallContent","backgroundImage","flex","HEADING","DIALOG_CLOSE_BUTTON","large","Template","Type","args","paddingRight","PDFref","createRef","CARD","paddingTop","marginRight","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","CV","elevation","Summary","MainDraggables","Page","styles","root","flexDirection","expand","show","message","top","editor","DateInput","date","setDate","INPUT","dateFormat","placeholderText","d","changer","submitType","getFullYear","getMonth","selected","showMonthDropdown","showYearDropdown","showMonthYearPicker","handleChange","preventDefault","newtext","handleChangeonDate","labelInfo","backdropFilter","DatePicker","DRAWER_HEADER","growVertically","customValue","setCustomValue","BUTTON","MENU_ITEM","Star","changeRating","hoverOverStar","unHoverOverStar","svgIconViewBox","svgIconPath","starContainerStyle","onMouseEnter","onMouseLeave","viewBox","starClasses","starSvgStyle","pathStyle","starSpacing","isFirstStar","isLastStar","ignoreInlineStyles","verticalAlign","isCurrentHoveredStar","starDimension","isStarred","isPartiallyFullStar","isHovered","hoverMode","starEmptyColor","starRatedColor","starHoverColor","gradientPathName","fillId","isSelected","classNames","hovered","StarRatings","highestStarHovered","Infinity","toFixed","slice","starRating","stopColorStyle","stopColor","stopOpacity","titleText","starRatingsStyle","starGradientStyle","x1","y1","x2","y2","offset","offsetValue","renderStars","boxSizing","typeOfWidget","selectedRating","rating","hoveredRating","currentRating","formattedRating","parseFloat","Number","isInteger","String","starText","firstTwoDecimals","split","numberOfStars","apply","_","defaultProps","SideDrawer","RenderInputform","DRAWER_BODY","Global_Dialog","handleClose","handleAdd","handleDeleteSection","renderInputs","renderAction","App","sideRef","overflow","WebkitBackdropFilter","overflowY","Drawer","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1423c650.chunk.js","sourcesContent":["export const Reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\nexport function array_move(arr, old_index, new_index) {\r\n  while (old_index < 0) {\r\n    old_index += arr.length;\r\n  }\r\n  while (new_index < 0) {\r\n    new_index += arr.length;\r\n  }\r\n  if (new_index >= arr.length) {\r\n    var k = new_index - arr.length + 1;\r\n    while (k--) {\r\n      arr.push(undefined);\r\n    }\r\n  }\r\n  arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n  return arr;\r\n}\r\nexport const getIndexByID = (array, id) => {\r\n  if ((!Array.isArray(array) && id === null) || id === undefined) {\r\n    throw Error(\r\n      \"Arguments must meet pre-condition: type of array for first argument\"\r\n    );\r\n  }\r\n  const statement = el => el.id === id;\r\n  return array.findIndex(statement);\r\n};\r\nexport function TwoTargets(targetArray, dropArray, targetIndex, dropIndex) {\r\n  const resultArray = [];\r\n  const pickedItem = targetArray.splice(targetIndex, 1)[0];\r\n  const result = dropArray.splice(dropIndex, 0, pickedItem);\r\n  resultArray[0] = targetArray;\r\n  resultArray[1] = result;\r\n  return resultArray;\r\n}\r\nconst grid = 6;\r\nexport const getItemStyle = (isDragging, draggableStyle) => {\r\n  return {\r\n    // some basic styles to make the items look a bit nicer\r\n\r\n    userSelect: \"none\",\r\n    padding: grid * 2,\r\n    margin: `0 0 ${grid}px 0`,\r\n    textAlign: \"left\",\r\n    // change background colour if dragging\r\n    background: isDragging ? \"lightgreen\" : null,\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle\r\n  };\r\n};\r\n\r\nexport const getQuestionListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? \"lightblue\" : null,\r\n  display: \"grid\",\r\n  gridTemplateColumns: \" repeat( auto-fit, minmax(250px, 1fr) )\"\r\n});\r\n\r\nexport const getAnswerListStyle = isDraggingOver => ({\r\n  border: isDraggingOver ? \"3px dashed lightblue\" : \"3px dashed lightgrey\",\r\n  padding: 4,\r\n  margin: \"3px\",\r\n  width: \"auto\",\r\n  minHeight: 400\r\n});\r\n","export const config = {\r\n  block: {\r\n    education: {\r\n      id: \"\",\r\n      fieldofstudy: \"\",\r\n      degree: \"\",\r\n      school: \"\",\r\n      schoollocation: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      description: \"\"\r\n    },\r\n    work_history: {\r\n      id: \"\",\r\n      jobtitle: \"\",\r\n      employer: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      workdetail: \"\"\r\n    },\r\n    contact: {\r\n      id: \"\",\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      profession: \"\",\r\n      street_address: \"\",\r\n      city: \"\",\r\n      state_province: \"\",\r\n      zipcode: \"\",\r\n      phone: \"\",\r\n      email_address: \"\",\r\n      social_links: \"\"\r\n    },\r\n    skill: {\r\n      id: \"\",\r\n      name: null,\r\n      value: 0\r\n    },\r\n    language: {\r\n      id: \"\",\r\n      name: \"\",\r\n      value: 0\r\n    }\r\n  },\r\n  section: {\r\n    id: \"\",\r\n    title: \"\",\r\n    type: \"\",\r\n    blocks: []\r\n  },\r\n  dialog: {\r\n    type: \"\",\r\n    title: \"\",\r\n    body: \"\",\r\n    action: \"\"\r\n  },\r\n  snippets: {\r\n    effect_types: {\r\n      FADE: \"FADE\",\r\n      GROW: \"GROW\",\r\n      SLIDE: \"SLIDE\",\r\n      ZOOM: \"ZOOM\"\r\n    },\r\n    //TC stands for abbreviations of Toast Callout\r\n    TC_types: {\r\n      PRIMARY: \"PRIMARY\",\r\n      SUCCESS: \"SUCCESS\",\r\n      WARNING: \"WARNING\",\r\n      DANGER: \"DANGER\"\r\n    }\r\n  }\r\n};\r\nexport const dialog_types = {\r\n  DELETE: \"DELETE\",\r\n  SUBMIT: \"SUBMIT\",\r\n  ACCEPT: \"ACCEPT\",\r\n  WARN: \"WARN\",\r\n  ADD: \"ADD\"\r\n};\r\nexport const Materials = {\r\n  degrees: [\r\n    \"High School Diploma\",\r\n    \"GED\",\r\n    \"Associate of Arts\",\r\n    \"Associate of Science\",\r\n    \"Associate of Applied Science\",\r\n    \"BBA\",\r\n    \"Master of Arts\",\r\n    \"Master of Science\",\r\n    \"MBA\",\r\n    \"J.D.\",\r\n    \"M.D.\",\r\n    \"Ph.D.\",\r\n    \"Other\",\r\n    \"Some College (No Degree)\"\r\n  ]\r\n};\r\nexport const block_types = {\r\n  main: {\r\n    Header: \"HEADER\",\r\n    Professional_summary: \"PROFESSIONAL_SUMMARY\",\r\n    Skills: \"SKILLS\",\r\n    Education: \"EDUCATION\",\r\n    Contact: \"CONTACT\",\r\n    Work_History: \"WORK_HISTORY\"\r\n  },\r\n  additional: {\r\n    language: \"LANGUAGE\",\r\n    Accomplishments: \"ACCOMPLISHMENTS\",\r\n    Affiliations: \"AFFILIATIONS\",\r\n    Additional_Information: \"ADDITIONAL_INFO\",\r\n    Software: \"SOFTWARE\",\r\n    Certifications: \"CERTIFICATIONS\",\r\n    Interests: \"INTERESTS\"\r\n  }\r\n};\r\nexport const section_types = {\r\n  Header: \"HEADER\",\r\n  Professional_summary: \"PROFESSIONAL_SUMMARY\",\r\n  Skills: \"SKILLS\",\r\n  Education: \"EDUCATION\",\r\n  Contact: \"CONTACT\",\r\n  Work_History: \"WORK_HISTORY\",\r\n  language: \"LANGUAGE\",\r\n  Accomplishments: \"ACCOMPLISHMENTS\",\r\n  Affiliations: \"AFFILIATIONS\",\r\n  Software: \"SOFTWARE\",\r\n  Certifications: \"CERTIFICATIONS\",\r\n  Interests: \"INTERESTS\",\r\n  Custom: \"CUSTOM\"\r\n};\r\nexport const SampleSectionButtons = [\r\n  { icon: \"flag\", text: \"Language\", type: section_types.language },\r\n  { icon: \"desktop\", text: \"Software\", type: section_types.Software },\r\n  { icon: \"heatmap\", text: \"Interests\", type: section_types.Interests },\r\n  {\r\n    icon: \"application\",\r\n    text: \"Certifications\",\r\n    type: section_types.Certifications\r\n  },\r\n  { icon: \"exchange\", text: \"Affiliations\", type: section_types.Affiliations },\r\n  {\r\n    icon: \"crown\",\r\n    text: \"Accomplishments\",\r\n    type: section_types.Accomplishments\r\n  },\r\n  { icon: \"add-to-artifact\", text: \"Custom\", type: section_types.Custom }\r\n];\r\n","import React, { createContext, createRef, forwardRef } from \"react\";\r\nimport update from \"immutability-helper\";\r\nimport { array_move } from \"../components/Draggables/utils\";\r\nimport { block_types, config, section_types } from \"./config\";\r\nexport const Contextulize = createContext();\r\n\r\nexport class ContextWrapper extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      snippets: {\r\n        globalColor: \"#39c3b1\",\r\n        globalDrag: { isOn: false, id: null },\r\n        gfond: \"Century Gothic\",\r\n        toast: {\r\n          isOpen: false,\r\n          content: null,\r\n          type: null\r\n        },\r\n        callout: {\r\n          isOpen: false,\r\n          content: null,\r\n          type: null\r\n        },\r\n        effect: {\r\n          isOn: false,\r\n          type: null,\r\n          duration: null\r\n        }\r\n      },\r\n      dialog: {\r\n        isOpen: false,\r\n        type: undefined,\r\n        header: undefined,\r\n        body: undefined,\r\n        action: undefined,\r\n        targetEl: null\r\n      },\r\n      blocks: [],\r\n      existing_section_types: [],\r\n      targetBlock: null,\r\n      isPreviewOpen: false,\r\n      sidedrawer: {\r\n        isOpen: false\r\n      },\r\n      heading: null,\r\n      summary: null,\r\n      leftCollumn: {\r\n        id: \"L\",\r\n        sections: [\r\n          {\r\n            id: \"0\",\r\n            title: \"Education\",\r\n            type: block_types.main.Education,\r\n            blocks: [\r\n              {\r\n                id: \"_0r\",\r\n                fieldofstudy: \"\",\r\n                degree: \"\",\r\n                school: \"\",\r\n                schoollocation: \"\",\r\n                startDate: \"\",\r\n                endDate: \"\",\r\n                description: \"\"\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            id: \"1\",\r\n            title: \"Work history\",\r\n            type: block_types.main.Work_History,\r\n            blocks: [\r\n              {\r\n                id: \"hie3\",\r\n                value: \"3\",\r\n                jobtitle: \"\",\r\n                employer: \"\",\r\n                city: \"\",\r\n                state: \"\",\r\n                startDate: \"\",\r\n                endDate: \"\",\r\n                workdetail: \"\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      rightCollumn: {\r\n        id: \"R\",\r\n        sections: [\r\n          {\r\n            id: \"_33xg\",\r\n            title: \"Contact\",\r\n            type: block_types.main.Contact,\r\n            blocks: [\r\n              {\r\n                id: \"rand_ex3\",\r\n                first_name: \"Bill\",\r\n                last_name: \"kill\",\r\n                profession: \"assassin\",\r\n                street_address: \"b-33\",\r\n                city: \"las-vegas\",\r\n                state_province: \"somewhere\",\r\n                zipcode: \"12304\",\r\n                phone: \"99424149\",\r\n                email: \"BillKill@example.com\",\r\n                social_links: \"\"\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            id: \"2\",\r\n            title: \"skills\",\r\n            type: block_types.main.Skills,\r\n            blocks: [\r\n              { id: \"_3hi6\", value: 5, name: \"Team management\" },\r\n              { id: \"f_hi7\", value: 2, name: \"Document management\" }\r\n            ]\r\n          },\r\n          {\r\n            id: \"3\",\r\n            title: \"languages\",\r\n            type: block_types.additional.language,\r\n            blocks: [\r\n              { id: \"h_3t1\", value: 5, name: \"English\" },\r\n              { id: \"h_4x1\", value: 5, name: \"Japaneses\" }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      focusedElement: null\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.state.existing_section_types.length <= 0) {\r\n      let array = Array.from(\r\n        [\r\n          ...this.state.rightCollumn.sections,\r\n          ...this.state.leftCollumn.sections\r\n        ],\r\n        s => s.type\r\n      );\r\n      this.setState({ existing_section_types: array });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @public methods\r\n   */\r\n  edit_header = text => {\r\n    this.state.heading = text;\r\n  };\r\n  edit_summary = text => {\r\n    this.state.summary = text;\r\n  };\r\n  openDialog = obj => {\r\n    let dialog = Object.assign(config.dialog, { ...obj, isOpen: true });\r\n    this.setState({ dialog: dialog });\r\n  };\r\n  closeDialog = () => {\r\n    this.setState({ dialog: { isOpen: false } });\r\n  };\r\n  setTargetBlock = obj => {\r\n    let target = {};\r\n    const {\r\n      column,\r\n      sectionIndex,\r\n      blockIndex,\r\n      blockType,\r\n      id,\r\n      sectiontitle\r\n    } = obj;\r\n    if (this.state.targetBlock !== null && id === this.state.targetBlock.id) {\r\n      return;\r\n    }\r\n    switch (column) {\r\n      case \"R\":\r\n        target = this.state.rightCollumn.sections[sectionIndex].blocks[\r\n          blockIndex\r\n        ];\r\n        break;\r\n\r\n      default:\r\n        target = this.state.leftCollumn.sections[sectionIndex].blocks[\r\n          blockIndex\r\n        ];\r\n        break;\r\n    }\r\n\r\n    let newTarget = Object.assign(\r\n      {},\r\n      { ...target, blockType, sectionIndex, blockIndex, column, sectiontitle }\r\n    );\r\n    this.setState({\r\n      ...this.state,\r\n      targetBlock: update(this.state.targetBlock, { $set: newTarget })\r\n    });\r\n  };\r\n\r\n  onEdit_currentTargetBlock = (targetkey, value) => {\r\n    if (this.state.targetBlock === null) return;\r\n    if (this.state.targetBlock.hasOwnProperty(targetkey.toString())) {\r\n      this.state.targetBlock[targetkey] = value;\r\n\r\n      this._updateBlock();\r\n    }\r\n  };\r\n  openPreView = () => {\r\n    this.setState({ isPreviewOpen: true });\r\n  };\r\n  closePreView = () => {\r\n    this.setState({ isPreviewOpen: false });\r\n  };\r\n  /**\r\n   * @method onDragEnd-will-trigger-after-drag-action-finished\r\n   */\r\n  onDragStart(result) {\r\n    //  this.state.snippets.globalDrag.isOn = true;\r\n    // this.state.snippets.globalDrag.id = result.draggableId;\r\n  }\r\n  onDragEnd(result) {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    if (result.type === \"HTML_DOMEditable_Component\") {\r\n      return;\r\n    }\r\n    if (result.type === \"section_container\") {\r\n      console.log(result);\r\n      if (result.source.droppableId === result.destination.droppableId) {\r\n        if (result.source.droppableId === \"L\") {\r\n          let newArray = array_move(\r\n            this.state.leftCollumn.sections,\r\n            result.source.index,\r\n            result.destination.index\r\n          );\r\n          this._update_targetBlock(result.destination);\r\n          this.setState({\r\n            ...this.state,\r\n            leftCollumn: update(this.state.leftCollumn, {\r\n              sections: { $set: newArray }\r\n            })\r\n          });\r\n        } else if (result.source.droppableId === \"R\") {\r\n          let newArray = array_move(\r\n            this.state.rightCollumn.sections,\r\n            result.source.index,\r\n            result.destination.index\r\n          );\r\n          this._update_targetBlock(result.destination);\r\n          this.setState({\r\n            ...this.state,\r\n            rightCollumn: update(this.state.rightCollumn, {\r\n              sections: { $set: newArray }\r\n            })\r\n          });\r\n        }\r\n      } else {\r\n        if (result.source.droppableId === \"L\") {\r\n          const target = this.state.leftCollumn.sections.find(\r\n            i => i.id === result.draggableId\r\n          );\r\n          this._update_targetBlock(result.destination);\r\n          this.setState({\r\n            ...this.state,\r\n            leftCollumn: update(this.state.leftCollumn, {\r\n              sections: { $splice: [[result.source.index, 1]] }\r\n            }),\r\n            rightCollumn: update(this.state.rightCollumn, {\r\n              sections: { $splice: [[result.destination.index, 0, target]] }\r\n            })\r\n          });\r\n        } else {\r\n          const target = this.state.rightCollumn.sections.find(\r\n            i => i.id === result.draggableId\r\n          );\r\n          this._update_targetBlock(result.destination);\r\n          this.setState({\r\n            ...this.state,\r\n            rightCollumn: update(this.state.rightCollumn, {\r\n              sections: { $splice: [[result.source.index, 1]] }\r\n            }),\r\n            leftCollumn: update(this.state.leftCollumn, {\r\n              sections: { $splice: [[result.destination.index, 0, target]] }\r\n            })\r\n          });\r\n        }\r\n      }\r\n      // this.Off_GlobalDrag();\r\n    } else {\r\n      if (result.source.id === result.destination.id) {\r\n        console.log(result);\r\n        this._blockSort(\r\n          result.source.droppableId,\r\n          result.source.index,\r\n          result.destination.index\r\n        );\r\n        this._update_blockIndex_of_targetBlock(result.destination.index);\r\n      }\r\n    }\r\n    //  return this.Off_GlobalDrag();\r\n  }\r\n  check = type => {\r\n    for (let i = 0; i <= this.state.existing_section_types.length; i++) {\r\n      console.log(this.state.existing_section_types[i] === type);\r\n      if (this.state.existing_section_types[i] === type) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n  changeSectionTitle(column, index, newTitle) {\r\n    //this.setState({...this.state,})\r\n    if (column === \"R\") {\r\n      this.setState({\r\n        ...this.state,\r\n        rightCollumn: update(this.state.rightCollumn, {\r\n          sections: { [index]: { title: { $set: newTitle } } }\r\n        })\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        leftCollumn: update(this.state.leftCollumn, {\r\n          sections: { [index]: { title: { $set: newTitle } } }\r\n        })\r\n      });\r\n      //return (this.state.leftCollumn.sections[index].title = newTitle);\r\n    }\r\n  }\r\n  create_section = (type, title, column) => {\r\n    // console.log(this._isSectionAlreadyExists(type));\r\n    if (this.check(type) === true) {\r\n      return;\r\n    } else {\r\n      const instance = this._init_Section(type, title);\r\n\r\n      if (column !== undefined && column !== null) {\r\n        switch (column) {\r\n          case \"R\":\r\n            console.log(\"pushing to right\");\r\n            this.setState({\r\n              ...this.state,\r\n              snippets: {\r\n                toast: {\r\n                  isOpen: true,\r\n                  content: \"new section has been added\",\r\n                  type: \"SUCCESS\"\r\n                }\r\n              },\r\n              existing_section_types: update(\r\n                this.state.existing_section_types,\r\n                { $push: [type] }\r\n              ),\r\n              rightCollumn: update(this.state.rightCollumn, {\r\n                sections: { $push: [instance] }\r\n              })\r\n            });\r\n\r\n          default:\r\n            this.setState({\r\n              ...this.state,\r\n              snippets: {\r\n                toast: {\r\n                  isOpen: true,\r\n                  content: \"new section has been added\",\r\n                  type: \"SUCCESS\"\r\n                }\r\n              },\r\n              existing_section_types: update(\r\n                this.state.existing_section_types,\r\n                { $push: [type] }\r\n              ),\r\n              leftCollumn: update(this.state.leftCollumn, {\r\n                sections: { $push: [instance] }\r\n              })\r\n            });\r\n        }\r\n        setTimeout(() => {\r\n          return (this.state.snippets.toast.isOpen = false);\r\n        }, 200);\r\n        /*  this.setState({\r\n          ...this.state,\r\n          existing_section_types: this.state.existing_section_types.push(type),\r\n          leftCollumn: update(this.state.leftCollumn, {\r\n            sections: { $push: [instance] }\r\n          })\r\n        });*/\r\n      }\r\n    }\r\n  };\r\n  deleteSection = (column, sectionIndex) => {\r\n    const { TC_types, effect_types } = config.snippets;\r\n    this._toggle_TOAST_with_EFFECT(\r\n      TC_types.DANGER,\r\n      \"section has been deleted\",\r\n      effect_types.FADE,\r\n      200\r\n    );\r\n    if (column === \"R\") {\r\n      this.setState({\r\n        ...this.state,\r\n        rightCollumn: update(this.state.rightCollumn, {\r\n          sections: { $splice: [[sectionIndex, 1]] }\r\n        })\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        leftCollumn: update(this.state.leftCollumn, {\r\n          sections: { $splice: [[sectionIndex, 1]] }\r\n        })\r\n      });\r\n    }\r\n  };\r\n  create_block = (type, column, sectionIndex) => {\r\n    let instance = this._init_Block(type);\r\n    if (column === \"R\") {\r\n      this.setState({\r\n        ...this.state,\r\n        snippents: {\r\n          toast: {\r\n            isOpen: true,\r\n            content: \"new block has been added\",\r\n            type: \"SUCCESS\"\r\n          }\r\n        },\r\n        rightCollumn: update(this.state.rightCollumn, {\r\n          sections: {\r\n            [sectionIndex]: {\r\n              blocks: {\r\n                $push: [instance]\r\n              }\r\n            }\r\n          }\r\n        })\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        snippents: {\r\n          toast: {\r\n            isOpen: true,\r\n            content: \"new block has been added\",\r\n            type: \"SUCCESS\"\r\n          }\r\n        },\r\n        leftCollumn: update(this.state.leftCollumn, {\r\n          sections: {\r\n            [sectionIndex]: {\r\n              blocks: {\r\n                $push: [instance]\r\n              }\r\n            }\r\n          }\r\n        })\r\n      });\r\n    }\r\n    setTimeout(() => {\r\n      this.state.snippets.toast.isOpen = false;\r\n    }, 1000);\r\n  };\r\n  delete_block = (column, sectionIndex, blockIndex) => {\r\n    if (column === \"R\") {\r\n      this.setState({\r\n        ...this.state,\r\n        rightCollumn: update(this.state.rightCollumn, {\r\n          sections: {\r\n            [sectionIndex]: { blocks: { $splice: [[blockIndex, 1]] } }\r\n          }\r\n        })\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        leftCollumn: update(this.state.leftCollumn, {\r\n          sections: {\r\n            [sectionIndex]: { blocks: { $splice: [[blockIndex, 1]] } }\r\n          }\r\n        })\r\n      });\r\n    }\r\n  };\r\n  open_sideDrawer = () => {\r\n    if (this.state.sidedrawer.isOpen === true) return;\r\n    this.setState({ sidedrawer: { isOpen: true } });\r\n  };\r\n  close_sideDrawer = () => {\r\n    if (this.state.sidedrawer.isOpen === false) return;\r\n    this.setState({ sidedrawer: { isOpen: false } });\r\n  };\r\n  setFocuse = el => {\r\n    this.setState({ focusedElement: el });\r\n  };\r\n  Off_GlobalDrag = () => {\r\n    this.setState({\r\n      snippents: { globalDrag: { isOn: false, targetID: null } }\r\n    });\r\n  };\r\n  /**\r\n   * @returns {main contexts, render() method}\r\n   */\r\n  render() {\r\n    return (\r\n      <Contextulize.Provider\r\n        value={{\r\n          state: this.state,\r\n          editHeader: text => this.edit_header(text),\r\n          editSummary: text => this.edit_summary(text),\r\n          onDragStart: e => this.onDragStart(e),\r\n          onDragEnd: e => this.onDragEnd(e),\r\n          setfocus: e => this.setFocuse(e),\r\n          changeSectionTitle: (cL, sI, nV) =>\r\n            this.changeSectionTitle(cL, sI, nV),\r\n          setTargetBlock: blockstatus => this.setTargetBlock(blockstatus),\r\n          onEditBlock: (k, v) => this.onEdit_currentTargetBlock(k, v),\r\n          openSideDrawer: () => this.open_sideDrawer(),\r\n          closeSideDrawer: () => this.close_sideDrawer(),\r\n          createSection: (ty, ti, c) => this.create_section(ty, ti, c),\r\n          deleteSection: (c, i) => this.deleteSection(c, i),\r\n          createBlock: (t, c, s) => this.create_block(t, c, s),\r\n          deleteBlock: (c, sI, bI) => this.delete_block(c, sI, bI),\r\n          openPreview: () => this.openPreView(),\r\n          closePreview: () => this.closePreView(),\r\n          openDialog: obj => this.openDialog(obj),\r\n          closeDialog: () => this.closeDialog(),\r\n          Off_GlobalDrag: () => this.Off_GlobalDrag()\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </Contextulize.Provider>\r\n    );\r\n  }\r\n  /**\r\n   * @private {methods are denoted as '_'}\r\n   */\r\n  _generateRandomID = () =>\r\n    \"_\" +\r\n    Math.random()\r\n      .toString(36)\r\n      .substr(2, 9);\r\n  _init_Section = (type, title) => {\r\n    let instance = Object.assign({}, config.section);\r\n    instance.id = this._generateRandomID();\r\n    instance.title = title;\r\n\r\n    switch (type) {\r\n      case section_types.Custom:\r\n        instance.type = this._generateRandomID();\r\n        break;\r\n\r\n      default:\r\n        instance.type = type;\r\n        break;\r\n    }\r\n\r\n    return instance;\r\n  };\r\n  _init_Block = type => {\r\n    let instance;\r\n    switch (type) {\r\n      case block_types.main.Education:\r\n        instance = Object.assign(\r\n          {},\r\n          {\r\n            ...config.block.education,\r\n            id: this._generateRandomID()\r\n          }\r\n        );\r\n        break;\r\n      case block_types.main.Work_History:\r\n        instance = Object.assign(\r\n          {},\r\n          {\r\n            ...config.block.work_history,\r\n            id: this._generateRandomID()\r\n          }\r\n        );\r\n        break;\r\n      case block_types.additional.language:\r\n        instance = Object.assign(\r\n          {},\r\n          { ...config.block.language, id: this._generateRandomID() }\r\n        );\r\n        break;\r\n      case block_types.main.Skills:\r\n        instance = Object.assign(\r\n          {},\r\n          { ...config.block.skill, id: this._generateRandomID() }\r\n        );\r\n        break;\r\n      case block_types.main.Contact:\r\n        instance = Object.assign(\r\n          {},\r\n          {\r\n            ...config.block.contact,\r\n            id: this._generateRandomID()\r\n          }\r\n        );\r\n      default:\r\n        instance = Object.assign(\r\n          {},\r\n          {\r\n            ...config.block.type,\r\n            id: this._generateRandomID()\r\n          }\r\n        );\r\n        break;\r\n    }\r\n    return instance;\r\n  };\r\n  _update_blockIndex_of_targetBlock = index => {\r\n    if (this.state.targetBlock === null) return;\r\n\r\n    return (this.state.targetBlock.blockIndex = index);\r\n  };\r\n  _update_targetBlock = destination => {\r\n    if (this.state.targetBlock === null) {\r\n      return;\r\n    } else {\r\n      const { droppableId, index } = destination;\r\n      const { sectionIndex, column } = this.state.targetBlock;\r\n      if (column === droppableId && sectionIndex === index) {\r\n        return;\r\n      } else {\r\n        this.state.targetBlock.sectionIndex = index;\r\n        return (this.state.targetBlock.column = droppableId);\r\n      }\r\n    }\r\n  };\r\n  _blockSort = (sectionID, oldIndex, newIndex) => {\r\n    let result = this.state.leftCollumn.sections.findIndex(\r\n      s => s.id === sectionID\r\n    );\r\n    let newArray;\r\n    switch (result) {\r\n      case -1: {\r\n        result = this.state.rightCollumn.sections.findIndex(\r\n          s => s.id === sectionID\r\n        );\r\n        newArray = array_move(\r\n          this.state.rightCollumn.sections[result].blocks,\r\n          oldIndex,\r\n          newIndex\r\n        );\r\n        this.setState({\r\n          ...this.state,\r\n          rightCollumn: update(this.state.rightCollumn, {\r\n            sections: {\r\n              [result]: {\r\n                blocks: {\r\n                  $set: newArray\r\n                }\r\n              }\r\n            }\r\n          })\r\n        });\r\n        break;\r\n      }\r\n      default:\r\n        newArray = array_move(\r\n          this.state.leftCollumn.sections[result].blocks,\r\n          oldIndex,\r\n          newIndex\r\n        );\r\n        this.setState({\r\n          ...this.state,\r\n          leftCollumn: update(this.state.leftCollumn, {\r\n            sections: {\r\n              [result]: {\r\n                blocks: {\r\n                  $set: newArray\r\n                }\r\n              }\r\n            }\r\n          })\r\n        });\r\n    }\r\n  };\r\n\r\n  _updateBlock = () => {\r\n    const { column, sectionIndex, blockIndex } = this.state.targetBlock;\r\n    let target;\r\n    let fixedObj;\r\n    if (column === \"R\") {\r\n      target = this.state.rightCollumn.sections[sectionIndex].blocks[\r\n        blockIndex\r\n      ];\r\n      if (JSON.stringify(this.state.targetBlock) !== JSON.stringify(target)) {\r\n        fixedObj = Object.assign({}, this.state.targetBlock);\r\n        delete fixedObj[\"column\"];\r\n        delete fixedObj[\"sectionIndex\"];\r\n        delete fixedObj[\"blockIndex\"];\r\n        this.setState({\r\n          ...this.state,\r\n          rightCollumn: update(this.state.rightCollumn, {\r\n            sections: {\r\n              [sectionIndex]: { blocks: { [blockIndex]: { $set: fixedObj } } }\r\n            }\r\n          })\r\n        });\r\n      }\r\n    } else {\r\n      target = this.state.leftCollumn.sections[sectionIndex].blocks[blockIndex];\r\n      if (JSON.stringify(this.state.targetBlock) !== JSON.stringify(target)) {\r\n        fixedObj = Object.assign({}, this.state.targetBlock);\r\n        delete fixedObj[\"column\"];\r\n        delete fixedObj[\"sectionIndex\"];\r\n        delete fixedObj[\"blockIndex\"];\r\n        this.setState({\r\n          ...this.state,\r\n          leftCollumn: update(this.state.leftCollumn, {\r\n            sections: {\r\n              [sectionIndex]: { blocks: { [blockIndex]: { $set: fixedObj } } }\r\n            }\r\n          })\r\n        });\r\n      }\r\n    }\r\n  };\r\n  _toggle_TOAST = (toastType, toastContent) => {\r\n    console.log(\"I am called\");\r\n    this.setState({\r\n      ...this.state,\r\n      snippets: {\r\n        toast: { isOpen: true, type: toastType, content: toastContent }\r\n      }\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ snippents: { toast: { isOpen: false } } });\r\n    }, 1000);\r\n  };\r\n  _toggle_TOAST_with_EFFECT = (\r\n    toastType,\r\n    toastContent,\r\n    effectType,\r\n    duration\r\n  ) => {\r\n    this.setState({\r\n      snippets: { effect: { isOn: true, type: effectType, duration } }\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        snippets: {\r\n          effect: { isOn: false },\r\n          toast: { isOpen: true, type: toastType, content: toastContent }\r\n        }\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          snippets: {\r\n            effect: { isOn: false },\r\n            toast: { isOpen: false }\r\n          }\r\n        });\r\n      }, duration + 10);\r\n    }, duration);\r\n  };\r\n  _isSectionAlreadyExists = type => {\r\n    let result = this.state.existing_section_types.findIndex(s => s === type);\r\n    console.log(this.state.existing_section_types);\r\n    console.log(result);\r\n    if (result === -1) {\r\n      this.setState({\r\n        existing_section_types: this.state.existing_section_types.concat(type)\r\n      });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n}\r\nexport function connect(Component) {\r\n  return class WrapperComponent extends React.Component {\r\n    render() {\r\n      return (\r\n        <Contextulize.Consumer>\r\n          {store => <Component {...this.props} context={store} />}\r\n        </Contextulize.Consumer>\r\n      );\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Alignment,\r\n  Button,\r\n  Classes,\r\n  H5,\r\n  Navbar,\r\n  NavbarDivider,\r\n  NavbarGroup,\r\n  NavbarHeading,\r\n  Switch\r\n} from \"@blueprintjs/core\";\r\nconst Header = props => {\r\n  return (\r\n    <Navbar>\r\n      <NavbarGroup align={Alignment.LEFT}>\r\n        <NavbarHeading>CV-Builder</NavbarHeading>\r\n        <NavbarDivider />\r\n        <Button className={Classes.MINIMAL} icon=\"home\" text=\"Home\" />\r\n      </NavbarGroup>\r\n      <NavbarGroup align={Alignment.RIGHT}>\r\n        <Button className={Classes.MINIMAL} icon=\"user\" />\r\n      </NavbarGroup>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nconst Body = props => {\r\n  return <div>{props.children}</div>;\r\n};\r\nexport default Body;\r\n","import React from \"react\";\r\nconst Footer = props => {\r\n  return <div>{props.children}</div>;\r\n};\r\nexport default Footer;\r\n","import { Position, Toaster } from \"@blueprintjs/core\";\r\n\r\n/** Singleton toaster instance. Create separate instances for different options. */\r\nexport const AppToaster = Toaster.create({\r\n  className: \"recipe-toaster\",\r\n  position: Position.BOTTOM_LEFT\r\n});\r\n","import React from \"react\";\r\nimport { block_types } from \"../../Context/config\";\r\nimport { connect } from \"../../Context\";\r\nimport {\r\n  FaGraduationCap,\r\n  FaBriefcase,\r\n  FaPuzzlePiece,\r\n  FaFontAwesomeFlag,\r\n  FaUserAlt,\r\n  FaMapPin\r\n} from \"react-icons/fa\";\r\n\r\nexport const RenderIcon = (type, size, gC) => {\r\n  let color = gC;\r\n\r\n  let Size = size !== null && size !== undefined ? size : 30;\r\n  switch (type) {\r\n    case block_types.main.Education:\r\n      return <FaGraduationCap size={Size} color={color} />;\r\n    case block_types.main.Work_History:\r\n      return <FaBriefcase size={Size} color={color} />;\r\n    case block_types.main.Skills:\r\n      return <FaPuzzlePiece size={Size} color={color} />;\r\n    case block_types.additional.language:\r\n      return <FaFontAwesomeFlag size={Size} color={color} />;\r\n    case block_types.main.Contact:\r\n      return <FaUserAlt size={Size} color={color} />;\r\n    default:\r\n      return <FaMapPin size={Size} color={color} />;\r\n  }\r\n};\r\n","import React, { createRef } from \"react\";\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuDivider,\r\n  Tooltip,\r\n  Button,\r\n  ButtonGroup,\r\n  Divider,\r\n  Popover,\r\n  Icon,\r\n  PopoverInteractionKind,\r\n  Classes,\r\n  InputGroup,\r\n  FormGroup\r\n} from \"@blueprintjs/core\";\r\nimport { connect } from \"../../../Context\";\r\nimport { RenderIcon } from \"../../Icons/RenderIcon\";\r\nimport { SampleSectionButtons as SSB } from \"../../../Context/config\";\r\nimport { Transition } from \"react-transition-group\";\r\nconst Status = props => {\r\n  const {\r\n    leftCollumn,\r\n    rightCollumn,\r\n    existing_section_types\r\n  } = props.context.state;\r\n  const { createSection } = props.context;\r\n  const { openPreview } = props.context;\r\n  const [currentS, setCurrentS] = React.useState({ type: null, title: null });\r\n  const titleRef = React.useRef({ value: \"\" });\r\n\r\n  const [popoverProps, setPopover] = React.useState({\r\n    boundary: \"viewport\",\r\n    canEscapeKeyClose: true,\r\n    exampleIndex: 0,\r\n    hasBackdrop: false,\r\n    inheritDarkTheme: true,\r\n    interactionKind: PopoverInteractionKind.CLICK,\r\n    isOpen: false,\r\n    minimal: false,\r\n    modifiers: {\r\n      arrow: { enabled: true },\r\n      flip: { enabled: true },\r\n      keepTogether: { enabled: true },\r\n      preventOverflow: { enabled: true }\r\n    },\r\n    position: \"auto\",\r\n    sliderValue: 5,\r\n    usePortal: true\r\n  });\r\n\r\n  const handleAddSection = () => {\r\n    createSection(currentS.type, currentS.title, \"R\");\r\n  };\r\n  const toggleCurrent = (type, title) => {\r\n    setCurrentS({ type, title });\r\n  };\r\n  const renderSectionForm = () => {\r\n    let instance;\r\n    switch (currentS) {\r\n      case \"CUSTOM\":\r\n        instance = (\r\n          <InputGroup\r\n            inputRef={titleRef}\r\n            id=\"state\"\r\n            placeholder=\"E.g Hobbies\"\r\n          />\r\n        );\r\n      default:\r\n        instance = (\r\n          <InputGroup\r\n            defaultValue={currentS.title}\r\n            id=\"state\"\r\n            placeholder=\"E.g Hobbies\"\r\n          />\r\n        );\r\n    }\r\n    return (\r\n      <div key={currentS.type}>\r\n        <div className={Classes.DIALOG_BODY}>\r\n          <FormGroup label=\"section title\" labelFor=\"text-input\">\r\n            {instance}\r\n          </FormGroup>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const handleCancel = () => {\r\n    toggleCurrent(null, null);\r\n    setPopover({ isOpen: undefined });\r\n  };\r\n  const getContents = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          minWidth: \"250px\",\r\n          height: \"420px\",\r\n          background: \"lemonchiffon\"\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"1fr 1fr 1fr\",\r\n            justifyContent: \"center\"\r\n          }}\r\n        >\r\n          {SSB.map((b, i) => {\r\n            return SSB.length - 1 === i ? null : (\r\n              <Button\r\n                onClick={() => toggleCurrent(b.type, b.text)}\r\n                key={i}\r\n                fill\r\n                icon={b.icon}\r\n                text={b.text}\r\n                minimal\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <Button\r\n              onClick={() => toggleCurrent(\"CUSTOM\", null)}\r\n              fill\r\n              text=\"Custom\"\r\n              icon=\"add-to-artifact\"\r\n              minimal\r\n            ></Button>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n\r\n        <div>\r\n          {currentS.type !== null ? (\r\n            <div>\r\n              {\" \"}\r\n              {renderSectionForm()}\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  bottom: \"0\",\r\n                  right: \"0\",\r\n                  padding: \"10px\"\r\n                }}\r\n              >\r\n                <Button onClick={handleCancel} minimal>\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={handleAddSection} minimal intent=\"success\">\r\n                  Add\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div style={{ margin: \"auto\" }}>\r\n      <Menu style={{ padding: \"10px\" }}>\r\n        <h3>Resume Sections </h3>\r\n        <MenuDivider />\r\n        {leftCollumn.sections.map(s => (\r\n          <MenuItem\r\n            icon={RenderIcon(s.type, 18, \"#5C7080\")}\r\n            key={s.id}\r\n            text={s.title}\r\n          />\r\n        ))}\r\n        {rightCollumn.sections.map(s => (\r\n          <MenuItem\r\n            icon={RenderIcon(s.type, 18, \"#5C7080\")}\r\n            key={s.id}\r\n            text={s.title}\r\n          />\r\n        ))}\r\n        <MenuDivider />\r\n        <div style={{ padding: \"10px 0 10px 0\" }}>\r\n          <Popover\r\n            portalClassName=\"foo\"\r\n            {...popoverProps}\r\n            position=\"right\"\r\n            enforceFocus={false}\r\n            isOpen={\r\n              popoverProps.isOpen === true\r\n                ? /* Controlled */ true\r\n                : /* Uncontrolled */ undefined\r\n            }\r\n          >\r\n            <Button\r\n              fill\r\n              icon=\"plus\"\r\n              minimal\r\n              rightIcon=\"caret-right\"\r\n              text=\"Add a section\"\r\n            ></Button>\r\n            {getContents()}\r\n          </Popover>\r\n        </div>\r\n        <MenuDivider />\r\n        <ButtonGroup>\r\n          <Tooltip content=\"Preview\" position=\"bottom\">\r\n            <Button\r\n              icon=\"eye-open\"\r\n              intent=\"warning\"\r\n              minimal\r\n              onClick={openPreview.bind(this)}\r\n            ></Button>\r\n          </Tooltip>\r\n          <Divider />\r\n          <Button\r\n            icon=\"download\"\r\n            intent=\"success\"\r\n            minimal\r\n            onClick={openPreview.bind(this)}\r\n          >\r\n            Dowload\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\nexport default connect(Status);\r\n","import React from \"react\";\r\nimport { Card, EditableText } from \"@blueprintjs/core\";\r\nconst SimpleTemp = props => {\r\n  /**height: \"297mm\", */\r\n  const { globalColor, gfond } = props.state.snippets;\r\n  const { editHeader } = props;\r\n  const handleChange = value => {\r\n    editHeader(value);\r\n  };\r\n  return (\r\n    <h1\r\n      className=\"bp3-heading\"\r\n      style={{\r\n        color: globalColor,\r\n        fontSize: \"39px\",\r\n        lineHeight: \"44px\",\r\n        fontFamily: gfond\r\n      }}\r\n    >\r\n      <EditableText\r\n        alwaysRenderInput\r\n        maxLength={39}\r\n        defaultValue={props.state.heading || \"\"}\r\n        placeholder=\"👋 Your name ?\"\r\n        onChange={handleChange}\r\n      ></EditableText>\r\n    </h1>\r\n  );\r\n};\r\nexport default SimpleTemp;\r\n/* <h1\r\n     className=\"bp3-heading\"\r\n     style={{ color: globalColor, fontSize: \"39px\", lineHeight: \"44px\" }}\r\n   >\r\n     My name is ...\r\n   </h1>*/\r\n","import React from \"react\";\r\nimport { Card, EditableText, Popover } from \"@blueprintjs/core\";\r\nconst SimpleTemp = props => {\r\n  /**height: \"297mm\", */\r\n  const { globalColor, gfond } = props.state.snippets;\r\n  const { editSummary } = props;\r\n  const handleChange = value => {\r\n    editSummary(value);\r\n  };\r\n  return (\r\n    <h4\r\n      className=\"bp3-heading\"\r\n      style={{ color: globalColor, fontFamily: gfond }}\r\n    >\r\n      <EditableText\r\n        alwaysRenderInput\r\n        maxLength={250}\r\n        multiline={true}\r\n        maxLines={10}\r\n        minLines={2}\r\n        placeholder={\r\n          props.state.summary === null || props.state.summary.trim() === \"\"\r\n            ? \"✍️ any summary? 🙋🏿‍♀️🙋‍♀️🙋🏿‍♂️🙋‍♂️      ┬┴┬┴┤ ͜ʖ ͡°) ├┬┴┬┴\"\r\n            : props.state.heading\r\n        }\r\n        onChange={handleChange}\r\n      ></EditableText>\r\n    </h4>\r\n  );\r\n};\r\nexport default SimpleTemp;\r\n/* <h3 className=\"bp3-heading\" style={{ color: globalColor }}>\r\n     I am ...\r\n   </h3>*/\r\n","import React from \"react\";\r\n\r\nimport { Blockquote, Icon, Classes } from \"@blueprintjs/core\";\r\nconst WorkHistory = props => {\r\n  return (\r\n    <div\r\n      key={props.jobtitle}\r\n      style={{\r\n        display: \"grid\",\r\n\r\n        gridTemplateColumns: \" 1fr 2fr\",\r\n        padding: \"8px 0px 0px 6px\",\r\n        textAlign: \"start\"\r\n      }}\r\n    >\r\n      <div style={{ minWidth: \"100px\" }}>\r\n        <h6\r\n          className={\r\n            props.startDate === \"\" || props.endDate === \"\"\r\n              ? \"bp3-text-disabled bp3-running-text\"\r\n              : \"bp3-running-text\"\r\n          }\r\n        >\r\n          {props.startDate || \"start-date\"}-<br />\r\n          {props.endDate || \"end-date\"}\r\n        </h6>\r\n      </div>\r\n      <div\r\n        style={{\r\n          textAlign: \"start\",\r\n          minWidth: \"150px\",\r\n          maxWidth: props.status.column === \"R\" ? \"150px\" : \"250px\",\r\n          whiteSpace: \"pre-wrap\"\r\n        }}\r\n      >\r\n        <h5\r\n          className={\r\n            props.jobtitle !== \"\"\r\n              ? \"bp3-heading\"\r\n              : \"bp3-text-disabled bp3-heading\"\r\n          }\r\n        >\r\n          {props.jobtitle || \"Your job title\"}\r\n          <div\r\n            className={\r\n              props.employer === \"\"\r\n                ? \"bp3-text-disabled bp3-text-small\"\r\n                : \"bp3-text-small\"\r\n            }\r\n          >\r\n            {props.employer || \"Employer\"}\r\n          </div>\r\n          <div\r\n            className={\r\n              props.city === \"\" || props.state === \"\"\r\n                ? \"bp3-text-disabled bp3-text-small\"\r\n                : \"bp3-text-small\"\r\n            }\r\n          >\r\n            {props.city || \"city\"},{props.state || \"state\"}\r\n          </div>\r\n        </h5>\r\n\r\n        <div\r\n          style={{ wordWrap: \"break-word\" }}\r\n          className={\r\n            props.workdetail === \"\" ? \"bp3-text-disabled\" : \"bp3-text-muted\"\r\n          }\r\n        >\r\n          <h4 className=\"bp3-text-small\">{props.workdetail || null}</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default WorkHistory;\r\n","import React from \"react\";\r\n\r\nimport { Blockquote, Icon, Classes } from \"@blueprintjs/core\";\r\nconst Education = props => {\r\n  return (\r\n    <div\r\n      key={props.fieldofstudy}\r\n      style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \" 1fr 2fr\",\r\n        padding: \"8px 0px 0px 6px\",\r\n        textAlign: \"start\"\r\n      }}\r\n    >\r\n      <div style={{ minWidth: \"100px\" }}>\r\n        <h6\r\n          className={\r\n            props.startDate === \"\" || props.endDate === null\r\n              ? \"bp3-running-text bp3-text-disabled\"\r\n              : \"bp3-running-text\"\r\n          }\r\n        >\r\n          {props.startDate || \"start-date\"}-\r\n          <br />\r\n          {props.endDate || \"end-date\"}\r\n        </h6>\r\n      </div>\r\n      <div\r\n        style={{\r\n          textAlign: \"start\",\r\n          minWidth: \"150px\",\r\n          maxWidth: props.status.column === \"R\" ? \"150px\" : \"250px\",\r\n          whiteSpace: \"pre-wrap\"\r\n        }}\r\n      >\r\n        <h5\r\n          className={\r\n            props.degree !== \"\" && props.fieldofstudy !== \"\"\r\n              ? \"bp3-heading\"\r\n              : \"bp3-heading bp3-text-disabled\"\r\n          }\r\n        >\r\n          {props.degree || \"Degree\"}: {props.fieldofstudy || \"Field of study\"}\r\n          <div\r\n            className={\r\n              props.school !== \"\" || props.schoollocation !== \"\"\r\n                ? \"bp3-text-small\"\r\n                : \"bp3-text-small bp3-text-disabled \"\r\n            }\r\n          >\r\n            {props.school || \"school\"}-{props.schoollocation || \"location\"}\r\n          </div>\r\n        </h5>\r\n\r\n        <div\r\n          style={{ wordWrap: \"break-word\" }}\r\n          className={\r\n            props.description === \"\"\r\n              ? \"bp3-text-small bp3-text-disabled\"\r\n              : \"bp3-text-small bp3-text-muted\"\r\n          }\r\n        >\r\n          <h4>{props.description || null}</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Education;\r\n","import React from \"react\";\r\nimport { Classes, Divider } from \"@blueprintjs/core\";\r\n/**id: \"_33xg\",\r\n            title: \"Contact\",\r\n            type: block_types.main.Contact,\r\n            first_name: \"Bill\",\r\n            last_name: \"kill\",\r\n            profession: \"assassin\",\r\n            street_address: \"b-33\",\r\n            city: \"las-vegas\",\r\n            state_province: \"somewhere\",\r\n            zipcode: \"12304\",\r\n            phone: \"99424149\",\r\n            email_address: \"BillKill@example.com\",\r\n            social_links: \"\" */\r\nconst Contact = props => {\r\n  return (\r\n    <div\r\n      style={{\r\n        wordWrap: \"break-word\",\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr\",\r\n        gridGap: \"5px\",\r\n        marginTop: \"10px\"\r\n      }}\r\n    >\r\n      <h6\r\n        style={{ marginBottom: 0 }}\r\n        className={\r\n          props.street_address === \"\" &&\r\n          props.city === \"\" &&\r\n          props.state_province === \"\"\r\n            ? \"bp3-heading bp3-text-disabled\"\r\n            : \"bp3-heading\"\r\n        }\r\n      >\r\n        🏠 Address\r\n      </h6>\r\n      <div>\r\n        <div\r\n          className={props.street_address === \"\" ? \"bp3-text-disabled\" : null}\r\n        >\r\n          {props.street_address || \"no street\"}\r\n        </div>\r\n        <div className={props.city === \"\" ? \"bp3-text-disabled\" : null}>\r\n          {props.city || \"no city\"}\r\n        </div>\r\n        <div\r\n          className={props.state_province === \"\" ? \"bp3-text-disabled\" : null}\r\n        >\r\n          {props.state_province || \"no province & state\"}\r\n        </div>\r\n        <div className={props.zipcode === \"\" ? \"bp3-text-disabled\" : null}>\r\n          {props.zipcode || \"\"}\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n      <h6\r\n        style={{ marginBottom: 0 }}\r\n        className={\r\n          props.phone === \"\" ? \"bp3-heading bp3-text-disabled\" : \"bp3-heading\"\r\n        }\r\n      >\r\n        📱 Phone number\r\n      </h6>\r\n      <div className={props.phone === \"\" ? \"bp3-text-disabled\" : null}>\r\n        {props.phone || \"no phone\"}\r\n      </div>\r\n      <Divider />\r\n      <h6\r\n        style={{ marginBottom: 0 }}\r\n        className={\r\n          props.email === \"\" ? \"bp3-heading bp3-text-disabled\" : \"bp3-heading\"\r\n        }\r\n      >\r\n        📧 E-mail\r\n      </h6>{\" \"}\r\n      <div className={props.email === \"\" ? \"bp3-text-disabled\" : null}>\r\n        {props.email || \"no email\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Contact;\r\n","import React from \"react\";\r\nexport const RatingBar = ({ max, value, minimal, color }) => {\r\n  const fixed = value > max ? max : value < 0 ? 0 : value;\r\n  const scale = (100 * fixed) / max;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: minimal ? \"150px\" : \"250px\",\r\n        //maxWidth: \"250px\",\r\n        backgroundColor: \"#f1f1f1\",\r\n        textAlign: \"center\",\r\n        color: \"white\"\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: `${scale}%`,\r\n          height: \" 10px\",\r\n          backgroundColor: value === max ? \"aquamarine\" : color,\r\n          transition: \"all .4s ease-in-out\"\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n/*export const RatingStar = ({ value }) => {\r\n  const fixed = value > 5 ? 5 : value < 0 ? 0 : value;\r\n  return <div> hey I am stars</div>;\r\n};\r\n*/\r\n","import React from \"react\";\r\nimport { RatingBar } from \"../Status/Ratings\";\r\nimport { connect } from \"../../../Context\";\r\nconst Skill = props => {\r\n  const renderWord = () => {\r\n    switch (props.value) {\r\n      case 1:\r\n        return \"Basic\";\r\n      case 2:\r\n        return \"Average\";\r\n      case 3:\r\n        return \"Good\";\r\n      case 4:\r\n        return \"Very Good\";\r\n      case 5:\r\n        return \"Excellent\";\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  const { column } = props.status;\r\n  const { globalColor } = props.context.state.snippets;\r\n  return (\r\n    <div key={props.name} style={{ columns: 1, padding: \"5px\" }}>\r\n      <h6\r\n        className={\r\n          props.name === null ? \"bp3-heading bp3-text-disabled\" : \"bp3-heading\"\r\n        }\r\n      >\r\n        {props.name || \"Your skill\"}{\" \"}\r\n      </h6>\r\n      <RatingBar\r\n        color={globalColor}\r\n        max={5}\r\n        minimal={column === \"R\" ? true : false}\r\n        value={props.value}\r\n      />\r\n      <p> {renderWord()}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default connect(Skill);\r\n","import React from \"react\";\r\nimport { RatingBar } from \"../Status/Ratings\";\r\nimport { connect } from \"../../../Context\";\r\nconst Language = props => {\r\n  const renderWord = () => {\r\n    switch (props.value) {\r\n      case 1:\r\n        return \"Elementary\";\r\n      case 2:\r\n        return \"Pre-intermediate\";\r\n      case 3:\r\n        return \"Intermediate\";\r\n      case 4:\r\n        return \"Upper-intermediate\";\r\n      case 5:\r\n        return \"Advanced\";\r\n      case 6:\r\n        return \"Native\";\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  const { column } = props.status;\r\n  const { globalColor } = props.context.state.snippets;\r\n  return (\r\n    <div key={props.name} style={{ columns: 1, padding: \"5px\" }}>\r\n      <h6\r\n        className={\r\n          props.name === \"\" ? \"bp3-heading bp3-text-disabled\" : \"bp3-heading\"\r\n        }\r\n      >\r\n        {props.name || \"Your language\"}{\" \"}\r\n      </h6>\r\n      <RatingBar\r\n        max={6}\r\n        color={globalColor}\r\n        minimal={column === \"R\" ? true : false}\r\n        value={props.value}\r\n      />\r\n      <p> {renderWord()}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default connect(Language);\r\n","import React from \"react\";\r\n\r\nimport { Icon, Button, Popover } from \"@blueprintjs/core\";\r\nimport { block_types } from \"../../../Context/config\";\r\nimport WorkHistory from \"../mainblocks/Workhistory\";\r\nimport Education from \"../mainblocks/Education\";\r\nimport Contact from \"../mainblocks/Contact\";\r\nimport Skill from \"../mainblocks/Skill\";\r\nimport Language from \"../mainblocks/Language\";\r\nimport { connect } from \"../../../Context\";\r\nimport { dialog_types } from \"../../../Context/config\";\r\nclass BlockBase extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      active: false,\r\n      grabbed: false\r\n    };\r\n    const { targetBlock } = this.props.context.state;\r\n\r\n    this.design = {\r\n      container: {\r\n        //  border: \"1px solid #eee\",\r\n        /* boxShadow:\r\n          \"0 0 0 1px rgba(16,22,26,.1),0 1px 1px rgba(16,22,26,.2),0 2px 6px rgba(16,22,26,.2)\",\r\n        */ boxShadow:\r\n          \"0 0 0 1px rgba(16,22,26,.1),0 2px 4px rgba(16,22,26,.2),0 8px 24px rgba(16,22,26,.2)\",\r\n        //  transformOrigin: \"650px 0%\",\r\n        borderRadius: \"3px\",\r\n        // padding: \"0 20px 0 20px\",\r\n        cursor: \"pointer\",\r\n        //  width: \"100%\",\r\n        width: \"calc(100% + 100px)\",\r\n        transform: \"translateX(-10%)\",\r\n        height: \"auto\",\r\n        transition: \"all .2s ease-in-out\",\r\n        //transform: `scale( 1.1 )`,\r\n        zIndex: 8,\r\n        //  display: \"inline-block\",\r\n        position: \"relative\",\r\n        background: \"#fff\"\r\n      },\r\n      default: {\r\n        //  width: \"100%\",\r\n        width: \"calc(100% + 100px)\",\r\n        transform: \"translateX(-10%)\",\r\n        // display: \"inline-block\",\r\n        //   position: \"relative\",\r\n        zIndex: 0\r\n      },\r\n\r\n      body: {\r\n        //padding: \" 0 35px 0 35px\"\r\n      },\r\n      flex1: {\r\n        flexGrow: 1\r\n      },\r\n      flex3: { flexGrow: 3 },\r\n      showIcon: {\r\n        opacity: 1,\r\n        visibility: \"visible\",\r\n        zIndex: -2\r\n      },\r\n      hideIcon: {\r\n        opacity: 0,\r\n        visibility: \"hidden\",\r\n        zIndex: 1\r\n      }\r\n    };\r\n    this.handlemouseover = this.handlemouseover.bind(this);\r\n    this.handlemouseOut = this.handlemouseOut.bind(this);\r\n    this.handleDeleteBlock = this.handleDeleteBlock.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    /* if (\r\n      this.props.id !== null &&\r\n      this.props.context.state.snippets.globalDrag.isOn !== false\r\n    ) {\r\n      if (this.props.id === this.props.context.state.snippets.globalDrag.id) {\r\n        this.setState({ grabbed: true });\r\n      }\r\n    }*/\r\n  }\r\n  /*componentWillUnmount() {\r\n    this.setState({ grabbed: false });\r\n  }*/\r\n  handlemouseover = () => {\r\n    this.setState({ active: true });\r\n  };\r\n  handlemouseOut = () => {\r\n    this.setState({ active: false });\r\n    // this.props.context.state.snippets.isglobalDragOn = false;\r\n  };\r\n  handlemouseClick = obj => {\r\n    this.props.context.setTargetBlock(obj);\r\n    this.props.context.openSideDrawer();\r\n  };\r\n  RenderBlockType = () => {\r\n    switch (this.props.type) {\r\n      case block_types.main.Work_History:\r\n        return <WorkHistory {...this.props} />;\r\n      case block_types.main.Skills:\r\n        return <Skill {...this.props} />;\r\n      case block_types.main.Contact:\r\n        return <Contact {...this.props} />;\r\n      case block_types.main.Education:\r\n        return <Education {...this.props} />;\r\n      case block_types.additional.language:\r\n        return <Language {...this.props} />;\r\n      case block_types.additional.Accomplishments:\r\n        return <div>I am accomplishment</div>;\r\n      default:\r\n        return <div>no one knows me hahahahahah </div>;\r\n    }\r\n  };\r\n  handleDeleteBlock = () => {\r\n    this.props.context.openDialog({\r\n      type: dialog_types.DELETE,\r\n      body: \"☝️ this can not be undone 🤔\",\r\n      header: \"😮 Are you sure you want to delete this section?\",\r\n      targetEl: {\r\n        type: \"block\",\r\n        column: this.props.status.column,\r\n        sectionIndex: this.props.status.sectionIndex,\r\n        blockIndex: this.props.status.blockIndex\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { isDragging, dragHandler, id } = this.props;\r\n    const { active } = this.state;\r\n    const { globalDrag } = this.props.context.state.snippets;\r\n\r\n    const blockstatus = {\r\n      ...this.props.status,\r\n      blockType: this.props.type\r\n    };\r\n    return (\r\n      <div\r\n        style={\r\n          active || isDragging ? this.design.container : this.design.default\r\n        }\r\n      >\r\n        <div\r\n          // style={{ position: \"relative\", width: active ? \"10px\" : null }}\r\n          onMouseOver={this.handlemouseover}\r\n          onMouseOut={this.handlemouseOut}\r\n          onMouseDown={this.handlemouseover}\r\n        >\r\n          <div style={active || isDragging ? this.designbody : null}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\"\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  flexGrow: 1\r\n                }}\r\n              >\r\n                <div\r\n                  style={\r\n                    active || isDragging\r\n                      ? this.design.showIcon\r\n                      : this.design.hideIcon\r\n                  }\r\n                  {...dragHandler}\r\n                >\r\n                  <Icon icon=\"drag-handle-vertical\" />\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                onClick={() => this.handlemouseClick(blockstatus)}\r\n                style={{\r\n                  flexGrow: 3\r\n                }}\r\n              >\r\n                {this.RenderBlockType()}\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  flexGrow: 1\r\n                }}\r\n              >\r\n                <div\r\n                  style={\r\n                    active || isDragging\r\n                      ? this.design.showIcon\r\n                      : this.design.hideIcon\r\n                  }\r\n                >\r\n                  <Button\r\n                    onClick={this.handleDeleteBlock}\r\n                    minimal\r\n                    icon={<Icon icon=\"trash\" color=\"red\" />}\r\n                  ></Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(BlockBase);\r\n/**\r\n * <Popover\r\n                        popoverClassName={exampleIndex <= 2 ? Classes.POPOVER_CONTENT_SIZING : \"\"}\r\n                        portalClassName=\"foo\"\r\n                        {...popoverProps}\r\n                        enforceFocus={false}\r\n                        isOpen={}\r\n                        >\r\n                        <Button intent={Intent.PRIMARY} text=\"Popover target\" />\r\n                        {this.getContents(exampleIndex)}\r\n                    </Popover>\r\n */\r\n","import React from \"react\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { Icon, Classes } from \"@blueprintjs/core\";\r\nimport BlockBase from \"./BlockBase\";\r\nconst BlockContainer = props => {\r\n  return (\r\n    <Droppable droppableId={`${props.id}`} type={props.type}>\r\n      {(provided, snapshot) => (\r\n        <div ref={provided.innerRef}>\r\n          {props.lists.map((o, i) => {\r\n            return (\r\n              <Draggable key={o.id} draggableId={o.id} index={i}>\r\n                {(provided, snapshot) => (\r\n                  <div ref={provided.innerRef} {...provided.draggableProps}>\r\n                    <BlockBase\r\n                      status={{\r\n                        column: props.isRight && !props.isLeft ? \"R\" : \"L\",\r\n                        blockIndex: i,\r\n                        sectionIndex: props.sectionindex,\r\n                        id: o.id,\r\n                        sectiontitle: props.title\r\n                      }}\r\n                      {...o}\r\n                      type={props.type}\r\n                      value={o.value}\r\n                      key={o.id}\r\n                      dragHandler={provided.dragHandleProps}\r\n                      isDragging={snapshot.isDragging}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            );\r\n          })}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\nexport default BlockContainer;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  Popover,\r\n  EditableText,\r\n  Icon,\r\n  Classes,\r\n  Button,\r\n  Tooltip,\r\n  InputGroup\r\n} from \"@blueprintjs/core\";\r\nimport { dialog_types } from \"../../../Context/config\";\r\nimport { RenderIcon } from \"../../Icons/RenderIcon\";\r\nimport RenderBlock from \"./BlockContainer\";\r\nimport \"../css/transitions.css\";\r\nconst SectionBase = props => {\r\n  const [active, setActive] = React.useState(false);\r\n  const [editable, setEditable] = React.useState(false);\r\n  const { isDraging, blocks, title, id, type, state } = props;\r\n  const handlemouseover = () => {\r\n    setActive(true);\r\n  };\r\n  const handlemouseOut = () => {\r\n    setActive(false);\r\n  };\r\n  React.useEffect(() => {\r\n    if (active === false) {\r\n      setEditable(false);\r\n    }\r\n  }, [active]);\r\n  const Style = {\r\n    container: {\r\n      //transform: `scale( 1 )`,\r\n      //transition: \"all .2s ease-in-out\",\r\n      //border: \"1px solid #eee\",\r\n      background: \"#fff\",\r\n      padding: \"3px\",\r\n      borderRadius: \"3px\",\r\n      boxShadow:\r\n        \"0 0 0 1px rgba(16,22,26,.1),0 1px 1px rgba(16,22,26,.2),0 2px 6px rgba(16,22,26,.2)\",\r\n      //width: \"calc(100% + 20px)\",\r\n      transitionTimingFunction: \"ease-in-out\",\r\n      zIndex: 5\r\n    },\r\n    defaultcontainer: {\r\n      padding: \"3px\",\r\n      zIndex: 0\r\n      //width: \"calc(100% + 20px)\"\r\n    },\r\n    showIcon: {\r\n      opacity: 1,\r\n      visibility: \"visible\"\r\n    },\r\n    hideIcon: {\r\n      opacity: 0,\r\n      visibility: \"hidden\"\r\n    }\r\n  };\r\n  const handleAddBlock = (column, sectionIndex, sectionType) => {\r\n    props.openDialog({\r\n      header: \"Add block\",\r\n      type: dialog_types.ADD,\r\n      body: \"somethnig\",\r\n      targetEl: {\r\n        column,\r\n        sectionIndex,\r\n        sectionType,\r\n        type: \"block\"\r\n      }\r\n    });\r\n  };\r\n  const handleDeleteSection = (column, sectionIndex) => {\r\n    props.openDialog({\r\n      type: dialog_types.DELETE,\r\n      body: \"☝️ this can not be undone 🤔\",\r\n      header: \"😮 Are you sure you want to delete this section?\",\r\n      targetEl: {\r\n        column,\r\n        sectionIndex,\r\n        type: \"section\"\r\n      }\r\n    });\r\n  };\r\n  const columnis = props.isRight && !props.isLeft ? \"R\" : \"L\";\r\n\r\n  const handleOnEditSectionTitle = e => {\r\n    props.changeSectionTitle(columnis, props.sectionindex, e.target.value);\r\n  };\r\n  const toggleEditMode = b => {\r\n    setEditable(b || false);\r\n  };\r\n  return (\r\n    <div>\r\n      <div\r\n        onMouseOver={handlemouseover}\r\n        onMouseOut={handlemouseOut}\r\n        onMouseDown={handlemouseover}\r\n        //style={isDraging || active ? Style.container : null}\r\n      >\r\n        <div\r\n          /*   style={{\r\n            display: \"inline-block\",\r\n            background: isDraging || active ? \"#fff\" : \"transparent\"\r\n          }}*/\r\n          // className={`fade ${!props.state.snippets.effect.isOn ? \"in\" : \"out\"}`}\r\n          style={isDraging || active ? Style.container : Style.defaultcontainer}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\"\r\n            }}\r\n          >\r\n            <div>\r\n              <Tooltip content=\"Add a block\" intent=\"success\" position=\"left\">\r\n                <Button\r\n                  onClick={() =>\r\n                    handleAddBlock(columnis, props.sectionindex, type)\r\n                  }\r\n                  style={isDraging || active ? Style.showIcon : Style.hideIcon}\r\n                  minimal\r\n                  icon={<Icon icon=\"plus\" color=\"#2bcaea\" />}\r\n                ></Button>\r\n              </Tooltip>\r\n            </div>\r\n            <div\r\n              {...props.draghandler}\r\n              style={{\r\n                background: \"transparent\",\r\n                padding: 0,\r\n                margin: 0\r\n              }}\r\n            >\r\n              <Icon\r\n                style={isDraging || active ? Style.showIcon : Style.hideIcon}\r\n                icon=\"drag-handle-horizontal\"\r\n              />\r\n            </div>\r\n            <div style={isDraging || active ? Style.showIcon : Style.hideIcon}>\r\n              <Tooltip\r\n                content=\"delete this section\"\r\n                position=\"right\"\r\n                intent=\"danger\"\r\n              >\r\n                <Button\r\n                  onClick={() =>\r\n                    handleDeleteSection(columnis, props.sectionindex)\r\n                  }\r\n                  minimal\r\n                  icon={<Icon icon=\"trash\" color=\"red\" />}\r\n                ></Button>\r\n              </Tooltip>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              background: isDraging || active ? \"#fff\" : \"transparent\"\r\n            }}\r\n          >\r\n            <div\r\n              className={Classes.DIALOG_HEADER}\r\n              style={{ background: \"transparent\", paddingLeft: \"0\" }}\r\n            >\r\n              <div className={Classes.ICON}>\r\n                {RenderIcon(props.type, null, state.snippets.globalColor)}\r\n              </div>\r\n              {editable ? (\r\n                <>\r\n                  <InputGroup\r\n                    defaultValue={title}\r\n                    placeholder=\"👋 title please..\"\r\n                    onChange={handleOnEditSectionTitle}\r\n                    autoFocus\r\n                  ></InputGroup>\r\n                  <div\r\n                    className={Classes.ICON}\r\n                    style={\r\n                      isDraging || active ? Style.showIcon : Style.hideIcon\r\n                    }\r\n                  >\r\n                    <Tooltip content=\"Cancel\" position=\"right\">\r\n                      <Button\r\n                        onClick={() => toggleEditMode(false)}\r\n                        icon=\"remove\"\r\n                        minimal\r\n                      ></Button>\r\n                    </Tooltip>\r\n                  </div>{\" \"}\r\n                </>\r\n              ) : (\r\n                <h4\r\n                  className=\"bp3-heading\"\r\n                  style={{\r\n                    color: props.state.snippets.globalColor,\r\n                    fontFamily: props.state.snippets.gfond\r\n                  }}\r\n                >\r\n                  {title}\r\n                  <div\r\n                    className={Classes.ICON}\r\n                    style={\r\n                      isDraging || active ? Style.showIcon : Style.hideIcon\r\n                    }\r\n                  >\r\n                    <Tooltip content=\"Rename\" position=\"right\" intent=\"warning\">\r\n                      <Button\r\n                        onClick={() => toggleEditMode(true)}\r\n                        icon=\"edit\"\r\n                        minimal\r\n                      ></Button>\r\n                    </Tooltip>\r\n                  </div>\r\n                </h4>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <div>\r\n                <RenderBlock {...props} lists={blocks} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n// <Blocks {...props} lists={blocks} />\r\nexport default SectionBase;\r\n/** filter: isDraging || active ? \"blur(2px)\" : null */\r\n","import React from \"react\";\r\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport Section from \"./Section\";\r\n\r\nconst mainDraggable = props => {\r\n  const { leftCollumn, rightCollumn, focusedElement } = props.state;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"grid\",\r\n        //   gridTemplateColumns: \" repeat( auto-fit, minmax(250px, 1fr) )\",\r\n        gridTemplateColumns: \"2fr 1fr\",\r\n        gridGap: \"10px\"\r\n      }}\r\n    >\r\n      <div>\r\n        <Droppable droppableId={leftCollumn.id} type=\"section_container\">\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              style={{\r\n                border: snapshot.isDraggingOver ? \"2px dashed lightblue\" : null,\r\n                minHeight: \"600px\"\r\n              }}\r\n            >\r\n              {leftCollumn.sections.map((item, index) => (\r\n                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.draggableProps}>\r\n                      <Section\r\n                        {...item}\r\n                        {...props}\r\n                        isLeft={true}\r\n                        isRight={false}\r\n                        draghandler={provided.dragHandleProps}\r\n                        sectionindex={index}\r\n                        isDraging={snapshot.isDragging}\r\n                        isActive={focusedElement === item.id}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </div>\r\n      <div>\r\n        <Droppable droppableId={rightCollumn.id} type=\"section_container\">\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              style={{\r\n                border: snapshot.isDraggingOver ? \"2px dashed lightblue\" : null,\r\n\r\n                minHeight: \"600px\"\r\n              }}\r\n            >\r\n              {rightCollumn.sections.map((item, index) => (\r\n                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.draggableProps}>\r\n                      <Section\r\n                        draghandler={provided.dragHandleProps}\r\n                        isDraging={snapshot.isDragging}\r\n                        {...props}\r\n                        isRight={true}\r\n                        isLeft={false}\r\n                        sectionindex={index}\r\n                        {...item}\r\n                        isActive={focusedElement === item.id}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default mainDraggable;\r\n/**\r\n *  <Answers questionNum={index} question={question} />\r\n */\r\n","import React from \"react\";\r\nimport html2canvas from \"html2canvas\";\r\nimport jsPDF from \"jspdf\";\r\nimport { pxToMm, mmToPx, range } from \"./utils\";\r\nimport { Button } from \"@blueprintjs/core\";\r\n\r\n/*\r\nCopied code from stackoverflow :)\r\nGetting pixel height in milimeters:\r\nhttps://stackoverflow.com/questions/7650413/pixel-to-mm-equation/27111621#27111621\r\n*/\r\nconst PrintButton = ({ id, label }) => {\r\n  const generatePDF = () => {\r\n    const input = document.getElementById(id);\r\n    const inputHeightMm = pxToMm(input.offsetHeight);\r\n    const a4WidthMm = 210;\r\n    const a4HeightMm = 297;\r\n    const a4HeightPx = mmToPx(a4HeightMm);\r\n    const numPages =\r\n      inputHeightMm <= a4HeightMm\r\n        ? 1\r\n        : Math.floor(inputHeightMm / a4HeightMm) + 1;\r\n    /* console.log({\r\n      input,\r\n      inputHeightMm,\r\n      a4HeightMm,\r\n      a4HeightPx,\r\n      numPages,\r\n      range: range(0, numPages),\r\n      comp: inputHeightMm <= a4HeightMm,\r\n      inputHeightPx: input.offsetHeight\r\n    });*/\r\n\r\n    html2canvas(input, { scrollY: 20 }).then(canvas => {\r\n      const imgData = canvas.toDataURL(\"image/png\", 1.0);\r\n      // console.log(imgData);\r\n      let pdf;\r\n      // Document of a4WidthMm wide and inputHeightMm high\r\n      if (inputHeightMm > a4HeightMm) {\r\n        // elongated a4 (system print dialog will handle page breaks)\r\n        //console.log(\"edited mode \");\r\n        pdf = new jsPDF(\"p\", \"mm\", [inputHeightMm + 16, a4WidthMm]);\r\n      } else {\r\n        // standard a4\r\n        //  console.log(\"normal mode \");\r\n        pdf = new jsPDF();\r\n      }\r\n      pdf.addImage(imgData, \"PNG\", 0, 0);\r\n      pdf.save(`${id}.pdf`);\r\n    });\r\n\r\n    ////////////////////////////////////////////////////////\r\n    // System to manually handle page breaks\r\n    // Wasn't able to get it working !\r\n    // The idea is to break html2canvas screenshots into multiple chunks and stich them together as a pdf\r\n    // If you get this working, please email me a khuranashivek@outlook.com and I'll update the article\r\n    ////////////////////////////////////////////////////////\r\n    /* let pdf = new jsPDF();\r\n    range(0, numPages).forEach(page => {\r\n      console.log(\r\n        `Rendering page ${page}. Capturing height: ${a4HeightPx} at yOffset: ${page *\r\n          a4HeightPx}`\r\n      );\r\n      html2canvas(input, { height: a4HeightPx, y: page * a4HeightPx }).then(\r\n        canvas => {\r\n          const imgData = canvas.toDataURL(\"image/png\");\r\n          console.log(imgData);\r\n          if (page > 0) {\r\n            pdf.addPage();\r\n          }\r\n          pdf.addImage(imgData, \"PNG\", 0, 0);\r\n        }\r\n      );\r\n    });\r\n\r\n    setTimeout(() => {\r\n      pdf.save(`${id}.pdf`);\r\n    }, 5000);*/\r\n  };\r\n  return (\r\n    <div>\r\n      <div id=\"myMm\" style={{ height: \"1mm\" }} />\r\n\r\n      <Button intent=\"success\" icon=\"download\" onClick={() => generatePDF()}>\r\n        {label}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrintButton;\r\n","export const pxToMm = px => {\r\n  return Math.floor(px / document.getElementById(\"myMm\").offsetHeight);\r\n};\r\n\r\nexport const mmToPx = mm => {\r\n  return document.getElementById(\"myMm\").offsetHeight * mm;\r\n};\r\n\r\nexport const range = (start, end) => {\r\n  return Array(end - start)\r\n    .join(0)\r\n    .split(0)\r\n    .map(function(val, id) {\r\n      return id + start;\r\n    });\r\n};\r\n\r\n//from stackoverflow https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction componentToHex(c) {\r\n  var hex = c.toString(16);\r\n  return hex.length == 1 ? \"0\" + hex : hex;\r\n}\r\n\r\nexport function rgbToHex(r, g, b) {\r\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\nexport function hexToRgb(hex) {\r\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n  hex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n    return r + r + g + g + b + b;\r\n  });\r\n\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result\r\n    ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n      }\r\n    : null;\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"../Context\";\r\nimport { Preview, print } from \"react-html2pdf\";\r\nimport {\r\n  Divider,\r\n  Overlay,\r\n  Classes,\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Dialog,\r\n  Tooltip\r\n} from \"@blueprintjs/core\";\r\n\r\nimport { RenderIcon } from \"../components/Icons/RenderIcon\";\r\n\r\nimport WorkHistory from \"../components/CV/mainblocks/Workhistory\";\r\nimport Education from \"../components/CV/mainblocks/Education\";\r\nimport Skill from \"../components/CV/mainblocks/Skill\";\r\nimport Contact from \"../components/CV/mainblocks/Contact\";\r\nimport { block_types } from \"../Context/config\";\r\nimport Pdf from \"react-to-pdf\";\r\nimport DowloadButton from \"./PrintButton\";\r\nconst PDFconvert = props => {\r\n  const { leftCollumn, rightCollumn, isPreviewOpen } = props.context.state;\r\n  const { closePreview } = props.context;\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <Dialog\r\n        isOpen={isPreviewOpen}\r\n        onClose={closePreview.bind(this)}\r\n        autoFocus\r\n        canEscapeKeyClose={true}\r\n        canOutsideClickClose={true}\r\n        enforceFocus={true}\r\n        hasBackdrop={true}\r\n        usePortal={true}\r\n        useTallContent={true}\r\n        style={{\r\n          width: \"auto\",\r\n          padding: \"10px\",\r\n          height: \"auto\",\r\n          margin: \"150px 0 30px 0\",\r\n          //transform: \"scale(1.2)\",\r\n\r\n          //  background: \"#8EC5FC;\",\r\n          backgroundImage: \"linear-gradient( 135deg, #FFA6B7 10%, #80cad9 100%)\"\r\n          /**\r\n           * background-image: linear-gradient( 135deg, #FFA6B7 10%, #1E2AD2 100%);\r\n           */\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flex: \"0 0 auto\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            margin: \"50px 50px 0 50px\"\r\n          }}\r\n        >\r\n          <h2 className={Classes.HEADING} style={{ marginBottom: 0 }}>\r\n            ✨Your CV ✨ 👏👏 😁\r\n          </h2>\r\n          <Button\r\n            className={Classes.DIALOG_CLOSE_BUTTON}\r\n            icon=\"cross\"\r\n            large\r\n            onClick={closePreview.bind(this)}\r\n            minimal\r\n          />\r\n        </div>\r\n\r\n        <Template\r\n          {...props}\r\n          leftCollumn={leftCollumn}\r\n          rightCollumn={rightCollumn}\r\n        />\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\nexport default connect(PDFconvert);\r\n/**\r\n * passing args is mandatory\r\n */\r\nconst Template = props => {\r\n  const { leftCollumn, rightCollumn } = props;\r\n  const { globalColor } = props.context.state.snippets;\r\n  const RenderBlockType = (Type, args, status) => {\r\n    switch (Type) {\r\n      case block_types.main.Work_History:\r\n        return <WorkHistory {...args} {...status} />;\r\n      case block_types.main.Skills:\r\n        return <Skill {...args} {...status} />;\r\n      case block_types.main.Education:\r\n        return <Education {...args} {...status} />;\r\n      case block_types.main.Contact:\r\n        return <Contact {...args} {...status} />;\r\n      case block_types.additional.language:\r\n        return (\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n\r\n              gridTemplateColumns: \" 1fr 2fr\",\r\n              padding: \"8px 0px 0px 6px\",\r\n              textAlign: \"start\"\r\n            }}\r\n          >\r\n            I am Language{\" \"}\r\n          </div>\r\n        );\r\n      case block_types.additional.Accomplishments:\r\n        return <div>I am accomplishment</div>;\r\n      default:\r\n        return <div>no one knows me hahahahahah </div>;\r\n    }\r\n  };\r\n  const design = {\r\n    default: {},\r\n    body: {\r\n      //padding: \" 0 35px 0 35px\"\r\n    },\r\n    DIALOG_HEADER: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      borderRadius: \"6px 6px 0 0\",\r\n      minHeight: \"40px\",\r\n      paddingRight: \"5px\",\r\n      flex: \"0 0 auto\"\r\n      // boxShadow: \"0 1px 0 rgba(16, 22, 26, 0.15)\"\r\n    },\r\n    showIcon: {\r\n      opacity: 1,\r\n      visibility: \"visible\"\r\n    },\r\n    hideIcon: {\r\n      opacity: 0,\r\n      visibility: \"hidden\"\r\n    }\r\n  };\r\n  const PDFref = React.createRef();\r\n  return (\r\n    <>\r\n      <div className={Classes.CARD} style={{ margin: \"50px\" }}>\r\n        <div\r\n          key={`${leftCollumn.id}-${rightCollumn}`}\r\n          id=\"singlepdf\"\r\n          ref={PDFref}\r\n          style={{\r\n            padding: \"25px\",\r\n            paddingTop: \"0\",\r\n            width: \"210mm\",\r\n            height: \"297mm\"\r\n          }}\r\n        >\r\n          <h1\r\n            className=\"bp3-heading\"\r\n            style={{\r\n              color: globalColor,\r\n              fontSize: \"39px\",\r\n              lineHeight: \"44px\",\r\n              fontFamily: \"Century Gothic\",\r\n              wordWrap: \"break-word\"\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {props.context.state.heading || \"No name ? 🧐\"}\r\n          </h1>\r\n          <div style={{ wordWrap: \"break-word\" }}>\r\n            <h4\r\n              className=\"bp3-heading\"\r\n              style={{\r\n                color: globalColor,\r\n                fontFamily: \"Century Gothic\"\r\n              }}\r\n            >\r\n              {props.context.state.summary || \"\"}\r\n            </h4>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              //   gridTemplateColumns: \" repeat( auto-fit, minmax(250px, 1fr) )\",\r\n              gridTemplateColumns: \"2fr 1fr\",\r\n              gridGap: \"10px\"\r\n            }}\r\n          >\r\n            <div style={{ minHeight: \"200px\" }}>\r\n              {leftCollumn.sections.map((item, index) => (\r\n                <div\r\n                  key={index}\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    margin: \"5px 0 5px 0\",\r\n                    width: \"100%\"\r\n                  }}\r\n                >\r\n                  <div style={{ ...design.DIALOG_HEADER }}>\r\n                    <div style={{ flex: \"0 0 auto\", marginRight: \"10px\" }}>\r\n                      {RenderIcon(item.type, null, globalColor)}\r\n                    </div>\r\n                    <h4 className=\"bp3-heading\" style={{ marginBottom: 0 }}>\r\n                      {item.title}\r\n                    </h4>\r\n                  </div>\r\n                  <Divider style={{ margin: 0 }} />\r\n                  {item.blocks.map((o, i) => {\r\n                    return (\r\n                      <div key={`block${i}`}>\r\n                        <div style={{ display: \"flex\" }}>\r\n                          <div>\r\n                            {RenderBlockType(item.type, o, {\r\n                              status: {\r\n                                column: \"L\",\r\n                                blockIndex: i,\r\n                                sectionIndex: index,\r\n                                id: o.id\r\n                              }\r\n                            })}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div style={{ minHeight: \"200px\" }}>\r\n              {rightCollumn.sections.map((item, index) => (\r\n                <div\r\n                  key={index}\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    margin: \"5px 0 5px 0\",\r\n                    width: \"100%\"\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      ...design.DIALOG_HEADER\r\n                    }}\r\n                  >\r\n                    <div style={{ flex: \"0 0 auto\", marginRight: \"10px\" }}>\r\n                      {RenderIcon(item.type, null, globalColor)}\r\n                    </div>\r\n                    <div>\r\n                      <h4 className=\"bp3-heading\" style={{ marginBottom: 0 }}>\r\n                        {item.title}\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                  <Divider style={{ margin: 0 }} />\r\n                  {item.blocks.map((o, i) => {\r\n                    return (\r\n                      <div key={`block${i}`}>\r\n                        <div style={{ display: \"flex\" }}>\r\n                          <div>\r\n                            {RenderBlockType(item.type, o, {\r\n                              status: {\r\n                                column: \"R\",\r\n                                blockIndex: i,\r\n                                sectionIndex: index,\r\n                                id: o.id\r\n                              }\r\n                            })}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={Classes.DIALOG_FOOTER}\r\n        style={{ margin: \"0 50px 50px 50px\" }}\r\n      >\r\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n          <DowloadButton id=\"singlepdf\" label=\"download\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n/**\r\n *   <Section\r\n                  {...item}\r\n                  {...props}\r\n                  isLeft={true}\r\n                  isRight={false}\r\n                  sectionindex={index}\r\n                />\r\n                 <div\r\n        className={Classes.DIALOG_FOOTER}\r\n        style={{ margin: \"0 50px 50px 50px\" }}\r\n      >\r\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n          <Pdf targetRef={ref} filename=\"code-example.pdf\">\r\n            {({ toPdf }) => (\r\n              <Button icon=\"download\" intent=\"success\" onClick={toPdf}>\r\n                {\" \"}\r\n                Dowload\r\n              </Button>\r\n            )}\r\n          </Pdf>\r\n        </div>\r\n      </div>\r\n */\r\n","import React from \"react\";\r\nimport { Card } from \"@blueprintjs/core\";\r\n\r\nimport CVheader from \"./components/Header\";\r\nimport Summary from \"./components/Summary\";\r\nimport MainDraggables from \"./components/MainDraggables\";\r\nimport PDFconvertWrapper from \"../../PDFconvert\";\r\nexport default function CV(props) {\r\n  /**height: \"297mm\",  width: \"210mm\"*/\r\n  console.log(props);\r\n  return (\r\n    <>\r\n      <Card\r\n        style={{ margin: \"auto\", width: \"210mm\", minHeight: \"297mm\" }}\r\n        elevation={1}\r\n      >\r\n        <CVheader {...props} />\r\n        <Summary {...props} />\r\n        <MainDraggables {...props} />\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./layout/header\";\r\nimport Body from \"./layout/body\";\r\nimport Footer from \"./layout/footer\";\r\nimport { AppToaster } from \"./utils/Toaster\";\r\nimport Status from \"./CV/Status/treeview\";\r\nimport Document from \"./CV\";\r\nimport Review from \"../PDFconvert\";\r\nclass Page extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expand: true\r\n    };\r\n  }\r\n  componentDidUpdate() {\r\n    const { toast } = this.props.state.snippets;\r\n\r\n    if (toast.isOpen) {\r\n      AppToaster.show({ message: toast.content, intent: toast.type });\r\n    }\r\n  }\r\n  // create toasts in response to interactions.\r\n  // in most cases, it's enough to simply create and forget (thanks to timeout).\r\n\r\n  styles = {\r\n    root: { display: \"flex\", flexDirection: \"row\", margin: \"100px\" }\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundImage: \" linear-gradient(62deg, #8EC5FC 0%, #E0C3FC 100%)\"\r\n        }}\r\n      >\r\n        <Header />\r\n        <Body>\r\n          <div style={{ ...this.styles.root }}>\r\n            <div style={{ flexGrow: 1 }}>\r\n              <div style={{ position: \"fixed\", top: \"140px\" }}>\r\n                <Status />\r\n              </div>\r\n            </div>\r\n            <div style={{ flexGrow: 3 }}>\r\n              <Document {...this.props} />\r\n            </div>\r\n            <div style={{ flexGrow: 1 }}>\r\n              <Review />\r\n            </div>\r\n          </div>\r\n        </Body>\r\n        <Footer> I am footer</Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Page;\r\n/**\r\n *     <PaperWrapper>\r\n                <h1>Name</h1>\r\n                <div>summaryy</div>\r\n                <Draggable />\r\n              </PaperWrapper>\r\n */\r\n","import React, { Component } from \"react\";\r\nimport { Editor, EditorState, RichUtils } from \"draft-js\";\r\nclass MyEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { editorState: EditorState.createEmpty() };\r\n    this.onChange = editorState => this.setState({ editorState });\r\n    this.setEditor = editor => {\r\n      this.editor = editor;\r\n    };\r\n    this.focusEditor = () => {\r\n      if (this.editor) {\r\n        this.editor.focus();\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.focusEditor();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={styles.editor} onClick={this.focusEditor}>\r\n        <Editor\r\n          ref={this.setEditor}\r\n          editorState={this.state.editorState}\r\n          placeholder=\"tell me about your work more please\"\r\n          onChange={this.onChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  editor: {\r\n    border: \"1px solid gray\",\r\n    minHeight: \"6em\"\r\n  }\r\n};\r\n\r\nexport default MyEditor;\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Classes } from \"@blueprintjs/core\";\r\n\r\nconst DateInput = props => {\r\n  const [date, setDate] = React.useState({\r\n    startDate: \"\",\r\n    isOpen: false\r\n  });\r\n\r\n  const handleChange = d => {\r\n    if (d !== null) {\r\n      setDate({\r\n        startDate: d,\r\n        isOpen: false\r\n      });\r\n\r\n      props.changer(props.submitType, `${d.getFullYear()}-${d.getMonth() + 1}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DatePicker\r\n      className={Classes.INPUT}\r\n      dateFormat=\"yyyy-MM\"\r\n      placeholderText={date.startDate}\r\n      onChange={handleChange}\r\n      selected={date.startDate}\r\n      showMonthDropdown\r\n      showYearDropdown\r\n      showMonthYearPicker\r\n    />\r\n  );\r\n};\r\nexport default DateInput;\r\n/**\r\n *  <DatePicker\r\n          dateFormat=\"yyyy/MM/dd\"\r\n          selected={date.startDate}\r\n          onChange={handleChange}\r\n          popperPlacement=\"bottom\"\r\n          inline\r\n          showMonthDropdown\r\n          showYearDropdown\r\n          popperModifiers={{\r\n            offset: {\r\n              enabled: true,\r\n              offset: \"5px, 10px\"\r\n            },\r\n            preventOverflow: {\r\n              enabled: true,\r\n              escapeWithReference: false,\r\n              boundariesElement: \"viewport\"\r\n            }\r\n          }}\r\n        />\r\n */\r\n","import React from \"react\";\r\n\r\nimport {\r\n  FormGroup,\r\n  InputGroup,\r\n  Classes,\r\n  Dialog,\r\n  TextArea\r\n} from \"@blueprintjs/core\";\r\nimport Editor from \"../../DocumentEditor/ClassicEditor\";\r\nimport { connect } from \"../../../Context\";\r\nimport DatePicker from \"../components/DatePicker\";\r\n\r\nconst WorkHistoryForm = props => {\r\n  const { sectionIndex, blockIndex, column } = props;\r\n  const { onEditBlock } = props.context;\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    let newtext = e.target.value;\r\n    let type = e.target.id;\r\n    switch (type) {\r\n      case \"jobtitle\":\r\n        return onEditBlock(\"jobtitle\", newtext);\r\n      case \"employer\":\r\n        return onEditBlock(\"employer\", newtext);\r\n      case \"city\":\r\n        return onEditBlock(\"city\", newtext);\r\n      case \"state\":\r\n        return onEditBlock(\"state\", newtext);\r\n      case \"startDate\":\r\n        return onEditBlock(\"startDate\", newtext);\r\n      case \"endDate\":\r\n        return onEditBlock(\"endDate\", newtext);\r\n\r\n      default:\r\n        return onEditBlock(type, newtext);\r\n    }\r\n  };\r\n  const handleChangeonDate = (type, date) => {\r\n    return onEditBlock(type, date);\r\n  };\r\n  return props !== null ? (\r\n    <div key={`${props.id}-input-type`}>\r\n      <div\r\n        className={Classes.DIALOG_HEADER}\r\n        style={{ background: \"transparent\" }}\r\n      >\r\n        <h3>Job review </h3>\r\n      </div>\r\n      <div className={Classes.DIALOG_BODY}>\r\n        <FormGroup\r\n          label=\"Job title\"\r\n          labelFor=\"text-input\"\r\n          labelInfo=\"(required)\"\r\n        >\r\n          <InputGroup\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            onChange={handleChange}\r\n            large\r\n            id=\"jobtitle\"\r\n            defaultValue={props.jobtitle || null}\r\n            placeholder=\"work title etc\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"Employer\" labelFor=\"text-input\">\r\n          <InputGroup\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            large\r\n            onChange={handleChange}\r\n            id=\"employer\"\r\n            defaultValue={props.employer || null}\r\n            placeholder=\"name \"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"City\" labelFor=\"text-input\">\r\n          <InputGroup\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            id=\"city\"\r\n            onChange={handleChange}\r\n            defaultValue={props.city || null}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"State\" labelFor=\"text-input\">\r\n          <InputGroup\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            id=\"state\"\r\n            onChange={handleChange}\r\n            defaultValue={props.state || null}\r\n            placeholder=\"contry etc\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"Start date\" labelFor=\"text-input\">\r\n          <DatePicker submitType=\"startDate\" changer={handleChangeonDate} />\r\n        </FormGroup>\r\n        <FormGroup label=\"End date\" labelFor=\"text-input\">\r\n          <DatePicker submitType=\"endDate\" changer={handleChangeonDate} />\r\n        </FormGroup>\r\n      </div>\r\n      <div className={Classes.DRAWER_HEADER}>\r\n        <h3>Job detail</h3>\r\n      </div>\r\n      <div className={Classes.DIALOG_BODY}>\r\n        <TextArea\r\n          style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n          maxLength={350}\r\n          fill\r\n          large\r\n          growVertically\r\n          id=\"workdetail\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n//<Editor />\r\nexport default connect(WorkHistoryForm);\r\n","import React from \"react\";\r\n\r\nimport {\r\n  FormGroup,\r\n  InputGroup,\r\n  Classes,\r\n  Dialog,\r\n  TextArea\r\n} from \"@blueprintjs/core\";\r\nimport Editor from \"../../DocumentEditor/ClassicEditor\";\r\nimport { connect } from \"../../../Context\";\r\nimport DatePicker from \"../components/DatePicker\";\r\nimport { Materials } from \"../../../Context/config\";\r\nimport \"../css/dropdown.css\";\r\nimport \"../css/InputStyle.css\";\r\nconst EducationForm = props => {\r\n  const { sectionIndex, blockIndex, column } = props;\r\n  const { onEditBlock } = props.context;\r\n  const [customValue, setCustomValue] = React.useState(false);\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    let newtext = e.target.value;\r\n    let type = e.target.id;\r\n    switch (type) {\r\n      case \"school\":\r\n        return onEditBlock(\"school\", newtext);\r\n      case \"schoollocation\":\r\n        return onEditBlock(\"schoollocation\", newtext);\r\n      case \"degree\":\r\n        return onEditBlock(\"degree\", newtext);\r\n      case \"fieldofstudy\":\r\n        return onEditBlock(\"fieldofstudy\", newtext);\r\n      case \"startDate\":\r\n        return onEditBlock(\"startDate\", newtext);\r\n      case \"endDate\":\r\n        return onEditBlock(\"endDate\", newtext);\r\n\r\n      default:\r\n        return onEditBlock(type, newtext);\r\n    }\r\n  };\r\n  const onDegreeChange = e => {\r\n    if (e.target.value === \"Other\") {\r\n      setCustomValue(true);\r\n    } else {\r\n      setCustomValue(false);\r\n      onEditBlock(\"degree\", e.target.value);\r\n    }\r\n  };\r\n  return props !== null ? (\r\n    <div key={`${props.id}-input-type`}>\r\n      <div\r\n        className={Classes.DIALOG_HEADER}\r\n        style={{ background: \"transparent\" }}\r\n      >\r\n        <h3>Education review </h3>\r\n      </div>\r\n      <div className={Classes.DIALOG_BODY}>\r\n        <FormGroup\r\n          label=\"School name\"\r\n          labelFor=\"text-input\"\r\n          labelInfo=\"(required)\"\r\n        >\r\n          <InputGroup\r\n            onChange={handleChange}\r\n            large\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            id=\"school\"\r\n            defaultValue={props.school || null}\r\n            placeholder=\"work title etc\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"School location\" labelFor=\"text-input\">\r\n          <InputGroup\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            onChange={handleChange}\r\n            id=\"schoollocation\"\r\n            defaultValue={props.schoollocation || null}\r\n            placeholder=\"work title etc\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"Degree\" labelFor=\"text-input\">\r\n          <select\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            className={Classes.BUTTON}\r\n            onChange={onDegreeChange}\r\n            id=\"degree\"\r\n          >\r\n            {Materials.degrees.map((d, i) => (\r\n              <option className={Classes.MENU_ITEM} value={d} key={i}>\r\n                {d}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {customValue ? (\r\n            <InputGroup\r\n              onChange={handleChange}\r\n              id=\"degree\"\r\n              defaultValue={props.degree || null}\r\n              style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n              placeholder=\"MBA, Ph.d etc\"\r\n            />\r\n          ) : null}\r\n        </FormGroup>\r\n        <FormGroup label=\"Field of study\" labelFor=\"text-input\">\r\n          <InputGroup\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            id=\"fieldofstudy\"\r\n            onChange={handleChange}\r\n            defaultValue={props.fieldofstudy || null}\r\n            placeholder=\"work title etc\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"Graduation start date\" labelFor=\"text-input\">\r\n          <DatePicker\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            submitType=\"startDate\"\r\n            changer={onEditBlock}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"Graduation end date\" labelFor=\"text-input\">\r\n          <DatePicker\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            submitType=\"endDate\"\r\n            changer={onEditBlock}\r\n          />\r\n        </FormGroup>\r\n      </div>\r\n      <div className={Classes.DRAWER_HEADER}>\r\n        <h3>add description</h3>\r\n      </div>\r\n      <div className={Classes.DIALOG_BODY}>\r\n        <TextArea\r\n          style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n          maxLength={350}\r\n          fill\r\n          large\r\n          growVertically\r\n          id=\"description\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\nexport default connect(EducationForm);\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Star extends React.Component {\r\n  get starContainerStyle() {\r\n    const {\r\n      changeRating,\r\n      starSpacing,\r\n      isFirstStar,\r\n      isLastStar,\r\n      ignoreInlineStyles\r\n    } = this.props;\r\n\r\n    const starContainerStyle = {\r\n      position: \"relative\",\r\n      display: \"inline-block\",\r\n      verticalAlign: \"middle\",\r\n      paddingLeft: isFirstStar ? undefined : starSpacing,\r\n      paddingRight: isLastStar ? undefined : starSpacing,\r\n      cursor: changeRating ? \"pointer\" : undefined\r\n    };\r\n    return ignoreInlineStyles ? {} : starContainerStyle;\r\n  }\r\n\r\n  get starSvgStyle() {\r\n    const {\r\n      ignoreInlineStyles,\r\n      isCurrentHoveredStar,\r\n      starDimension\r\n    } = this.props;\r\n    const starSvgStyle = {\r\n      width: starDimension,\r\n      height: starDimension,\r\n      transition: \"transform .2s ease-in-out\",\r\n      transform: isCurrentHoveredStar ? \"scale(1.1)\" : undefined\r\n    };\r\n\r\n    return ignoreInlineStyles ? {} : starSvgStyle;\r\n  }\r\n\r\n  get pathStyle() {\r\n    const {\r\n      isStarred,\r\n      isPartiallyFullStar,\r\n      isHovered,\r\n      hoverMode,\r\n      starEmptyColor,\r\n      starRatedColor,\r\n      starHoverColor,\r\n      gradientPathName,\r\n      fillId,\r\n      ignoreInlineStyles\r\n    } = this.props;\r\n\r\n    let fill;\r\n    if (hoverMode) {\r\n      if (isHovered) fill = starHoverColor;\r\n      else fill = starEmptyColor;\r\n    } else {\r\n      if (isPartiallyFullStar) fill = `url('${gradientPathName}#${fillId}')`;\r\n      else if (isStarred) fill = starRatedColor;\r\n      else fill = starEmptyColor;\r\n    }\r\n\r\n    const pathStyle = {\r\n      fill: fill,\r\n      transition: \"fill .2s ease-in-out\"\r\n    };\r\n\r\n    return ignoreInlineStyles ? {} : pathStyle;\r\n  }\r\n\r\n  get starClasses() {\r\n    const {\r\n      isSelected,\r\n      isPartiallyFullStar,\r\n      isHovered,\r\n      isCurrentHoveredStar,\r\n      ignoreInlineStyles\r\n    } = this.props;\r\n\r\n    const starClasses = classNames({\r\n      \"widget-svg\": true,\r\n      \"widget-selected\": isSelected,\r\n      \"multi-widget-selected\": isPartiallyFullStar,\r\n      hovered: isHovered,\r\n      \"current-hovered\": isCurrentHoveredStar\r\n    });\r\n\r\n    return ignoreInlineStyles ? {} : starClasses;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      changeRating,\r\n      hoverOverStar,\r\n      unHoverOverStar,\r\n      svgIconViewBox,\r\n      svgIconPath\r\n    } = this.props;\r\n    return (\r\n      <div\r\n        className=\"star-container\"\r\n        style={this.starContainerStyle}\r\n        onMouseEnter={hoverOverStar}\r\n        onMouseLeave={unHoverOverStar}\r\n        onClick={changeRating}\r\n      >\r\n        <svg\r\n          viewBox={svgIconViewBox}\r\n          className={this.starClasses}\r\n          style={this.starSvgStyle}\r\n        >\r\n          <path className=\"star\" style={this.pathStyle} d={svgIconPath} />\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nStar.propTypes = {\r\n  fillId: PropTypes.string.isRequired,\r\n  changeRating: PropTypes.func,\r\n  hoverOverStar: PropTypes.func,\r\n  unHoverOverStar: PropTypes.func,\r\n  isStarred: PropTypes.bool.isRequired,\r\n  isPartiallyFullStar: PropTypes.bool.isRequired,\r\n  isHovered: PropTypes.bool.isRequired,\r\n  hoverMode: PropTypes.bool.isRequired,\r\n  isCurrentHoveredStar: PropTypes.bool.isRequired,\r\n  isFirstStar: PropTypes.bool.isRequired,\r\n  isLastStar: PropTypes.bool.isRequired,\r\n  starDimension: PropTypes.string.isRequired,\r\n  starSpacing: PropTypes.string.isRequired,\r\n  starHoverColor: PropTypes.string.isRequired,\r\n  starRatedColor: PropTypes.string.isRequired,\r\n  starEmptyColor: PropTypes.string.isRequired,\r\n  gradientPathName: PropTypes.string.isRequired,\r\n  ignoreInlineStyles: PropTypes.bool.isRequired,\r\n  svgIconPath: PropTypes.string.isRequired,\r\n  svgIconViewBox: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Star;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Star from \"./Star\";\r\n\r\nclass StarRatings extends React.Component {\r\n  state = {\r\n    highestStarHovered: -Infinity\r\n  };\r\n  fillId = `starGrad${Math.random()\r\n    .toFixed(15)\r\n    .slice(2)}`;\r\n\r\n  get starRatingsStyle() {\r\n    const starRatingsStyle = {\r\n      position: \"relative\",\r\n      boxSizing: \"border-box\",\r\n      display: \"inline-block\"\r\n    };\r\n    return this.props.ignoreInlineStyles ? {} : starRatingsStyle;\r\n  }\r\n\r\n  get starGradientStyle() {\r\n    const starGradientStyle = {\r\n      position: \"absolute\",\r\n      zIndex: \"0\",\r\n      width: \"0\",\r\n      height: \"0\",\r\n      visibility: \"hidden\"\r\n    };\r\n    return this.props.ignoreInlineStyles ? {} : starGradientStyle;\r\n  }\r\n\r\n  stopColorStyle(color) {\r\n    const stopColorStyle = {\r\n      stopColor: color,\r\n      stopOpacity: \"1\"\r\n    };\r\n    return this.props.ignoreInlineStyles ? {} : stopColorStyle;\r\n  }\r\n\r\n  get titleText() {\r\n    const { typeOfWidget, rating: selectedRating } = this.props;\r\n    const hoveredRating = this.state.highestStarHovered;\r\n    const currentRating = hoveredRating > 0 ? hoveredRating : selectedRating;\r\n    // fix it at 2 decimal places and remove trailing 0s\r\n    let formattedRating = parseFloat(currentRating.toFixed(2)).toString();\r\n    if (Number.isInteger(currentRating)) {\r\n      formattedRating = String(currentRating);\r\n    }\r\n    let starText = `${typeOfWidget}s`;\r\n    if (formattedRating === \"1\") {\r\n      starText = typeOfWidget;\r\n    }\r\n    return `${formattedRating} ${starText}`;\r\n  }\r\n\r\n  get offsetValue() {\r\n    const rating = this.props.rating;\r\n    const ratingIsInteger = Number.isInteger(rating);\r\n    let offsetValue = \"0%\";\r\n    if (!ratingIsInteger) {\r\n      const firstTwoDecimals = rating\r\n        .toFixed(2)\r\n        .split(\".\")[1]\r\n        .slice(0, 2);\r\n      offsetValue = `${firstTwoDecimals}%`;\r\n    }\r\n    return offsetValue;\r\n  }\r\n\r\n  hoverOverStar = starRating => {\r\n    return () => {\r\n      this.setState({\r\n        highestStarHovered: starRating\r\n      });\r\n    };\r\n  };\r\n\r\n  unHoverOverStar = () => {\r\n    this.setState({\r\n      highestStarHovered: -Infinity\r\n    });\r\n  };\r\n\r\n  get renderStars() {\r\n    const {\r\n      changeRating,\r\n      rating: selectedRating,\r\n      numberOfStars,\r\n      starDimension,\r\n      starSpacing,\r\n      starRatedColor,\r\n      starEmptyColor,\r\n      starHoverColor,\r\n      gradientPathName,\r\n      ignoreInlineStyles,\r\n      svgIconPath,\r\n      svgIconViewBox,\r\n      name\r\n    } = this.props;\r\n    const { highestStarHovered } = this.state;\r\n\r\n    const numberOfStarsArray = Array.apply(null, Array(numberOfStars));\r\n\r\n    return numberOfStarsArray.map((_, index) => {\r\n      const starRating = index + 1;\r\n      const isStarred = starRating <= selectedRating;\r\n\r\n      // hovered only matters when changeRating is true\r\n      const hoverMode = highestStarHovered > 0;\r\n      const isHovered = starRating <= highestStarHovered;\r\n      const isCurrentHoveredStar = starRating === highestStarHovered;\r\n\r\n      // only matters when changeRating is false\r\n      // given star 5 and rating 4.2:  5 > 4.2 && 4 < 4.2;\r\n      const isPartiallyFullStar =\r\n        starRating > selectedRating && starRating - 1 < selectedRating;\r\n\r\n      const isFirstStar = starRating === 1;\r\n      const isLastStar = starRating === numberOfStars;\r\n\r\n      return (\r\n        <Star\r\n          key={starRating}\r\n          fillId={this.fillId}\r\n          changeRating={\r\n            changeRating ? () => changeRating(starRating, name) : null\r\n          }\r\n          hoverOverStar={changeRating ? this.hoverOverStar(starRating) : null}\r\n          unHoverOverStar={changeRating ? this.unHoverOverStar : null}\r\n          isStarred={isStarred}\r\n          isPartiallyFullStar={isPartiallyFullStar}\r\n          isHovered={isHovered}\r\n          hoverMode={hoverMode}\r\n          isCurrentHoveredStar={isCurrentHoveredStar}\r\n          isFirstStar={isFirstStar}\r\n          isLastStar={isLastStar}\r\n          starDimension={starDimension}\r\n          starSpacing={starSpacing}\r\n          starHoverColor={starHoverColor}\r\n          starRatedColor={starRatedColor}\r\n          starEmptyColor={starEmptyColor}\r\n          gradientPathName={gradientPathName}\r\n          ignoreInlineStyles={ignoreInlineStyles}\r\n          svgIconPath={svgIconPath}\r\n          svgIconViewBox={svgIconViewBox}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { starRatedColor, starEmptyColor } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className=\"star-ratings\"\r\n        title={this.titleText}\r\n        style={this.starRatingsStyle}\r\n      >\r\n        <svg className=\"star-grad\" style={this.starGradientStyle}>\r\n          <defs>\r\n            <linearGradient id={this.fillId} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n              <stop\r\n                offset=\"0%\"\r\n                className=\"stop-color-first\"\r\n                style={this.stopColorStyle(starRatedColor)}\r\n              />\r\n              <stop\r\n                offset={this.offsetValue}\r\n                className=\"stop-color-first\"\r\n                style={this.stopColorStyle(starRatedColor)}\r\n              />\r\n              <stop\r\n                offset={this.offsetValue}\r\n                className=\"stop-color-final\"\r\n                style={this.stopColorStyle(starEmptyColor)}\r\n              />\r\n              <stop\r\n                offset=\"100%\"\r\n                className=\"stop-color-final\"\r\n                style={this.stopColorStyle(starEmptyColor)}\r\n              />\r\n            </linearGradient>\r\n          </defs>\r\n        </svg>\r\n        {this.renderStars}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nStarRatings.propTypes = {\r\n  rating: PropTypes.number.isRequired,\r\n  numberOfStars: PropTypes.number.isRequired,\r\n  changeRating: PropTypes.func,\r\n  starHoverColor: PropTypes.string.isRequired,\r\n  starRatedColor: PropTypes.string.isRequired,\r\n  starEmptyColor: PropTypes.string.isRequired,\r\n  starDimension: PropTypes.string.isRequired,\r\n  starSpacing: PropTypes.string.isRequired,\r\n  gradientPathName: PropTypes.string.isRequired,\r\n  ignoreInlineStyles: PropTypes.bool.isRequired,\r\n  svgIconPath: PropTypes.string.isRequired,\r\n  svgIconViewBox: PropTypes.string.isRequired,\r\n  name: PropTypes.string\r\n};\r\n\r\nStarRatings.defaultProps = {\r\n  rating: 0,\r\n  typeOfWidget: \"Star\",\r\n  numberOfStars: 5,\r\n  changeRating: null,\r\n  starHoverColor: \"rgb(230, 67, 47)\",\r\n  starRatedColor: \"rgb(109, 122, 130)\",\r\n  starEmptyColor: \"rgb(203, 211, 227)\",\r\n  starDimension: \"50px\",\r\n  starSpacing: \"7px\",\r\n  gradientPathName: \"\",\r\n  ignoreInlineStyles: false,\r\n  svgIconPath: \"m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z\",\r\n  svgIconViewBox: \"0 0 51 48\"\r\n};\r\n\r\nexport default StarRatings;\r\n","import React from \"react\";\r\nimport { Classes, InputGroup, Slider } from \"@blueprintjs/core\";\r\nimport { connect } from \"../../../Context\";\r\nimport StarRating from \"../Status/component/star-rating\";\r\nconst WorkHistoryForm = props => {\r\n  const { name, value } = props;\r\n  const { onEditBlock } = props.context;\r\n  const [rate, setRating] = React.useState(value);\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    let newtext = e.target.value;\r\n    onEditBlock(\"name\", newtext);\r\n  };\r\n  const changeRating = value => {\r\n    onEditBlock(\"value\", value);\r\n  };\r\n\r\n  return props !== null ? (\r\n    <div key={`${props.id}-input-type`}>\r\n      <div\r\n        className={Classes.DIALOG_HEADER}\r\n        style={{ background: \"transparent\" }}\r\n      >\r\n        <h3 className=\"bp3-text-large bp3-running-text bp3-text-muted\">\r\n          What <b style={{ color: \"green\" }}>skills</b> do you want to\r\n          highlight? Use our expert recommendations below to get started\r\n        </h3>\r\n      </div>\r\n      <div className={Classes.DIALOG_BODY}>\r\n        <div style={{ marginBottom: \"10px\" }}>\r\n          <InputGroup\r\n            large\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            onChange={handleChange}\r\n            defaultValue={props.name || null}\r\n            placeholder=\"your skill\"\r\n          />\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div>Basic</div>\r\n          <StarRating\r\n            rating={value}\r\n            starRatedColor=\"gold\"\r\n            changeRating={changeRating}\r\n            numberOfStars={5}\r\n            name=\"rating\"\r\n            starDimension=\"20px\"\r\n          />\r\n          <div>Excellent</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\nexport default connect(WorkHistoryForm);\r\n","import React from \"react\";\r\nimport { Classes, InputGroup, Slider } from \"@blueprintjs/core\";\r\nimport { connect } from \"../../../Context\";\r\nimport StarRating from \"../Status/component/star-rating\";\r\nconst LanguageForm = props => {\r\n  const { name, value } = props;\r\n  const { onEditBlock } = props.context;\r\n  const [rate, setRating] = React.useState(value);\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    let newtext = e.target.value;\r\n    onEditBlock(\"name\", newtext);\r\n  };\r\n  const changeRating = value => {\r\n    onEditBlock(\"value\", value);\r\n  };\r\n\r\n  return props !== null ? (\r\n    <div key={`${props.id}-input-type`}>\r\n      <div\r\n        className={Classes.DIALOG_HEADER}\r\n        style={{ background: \"transparent\" }}\r\n      >\r\n        <h3 className=\"bp3-text-large bp3-running-text bp3-text-muted\">\r\n          What <b style={{ color: \"green\" }}>language</b> do you speak?\r\n        </h3>\r\n      </div>\r\n      <div className={Classes.DIALOG_BODY}>\r\n        <div style={{ marginBottom: \"10px\" }}>\r\n          <InputGroup\r\n            large\r\n            onChange={handleChange}\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            defaultValue={props.name || null}\r\n            placeholder=\"your skill\"\r\n          />\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div>Elementary</div>\r\n          <StarRating\r\n            rating={value || 0}\r\n            starRatedColor=\"gold\"\r\n            changeRating={changeRating}\r\n            numberOfStars={6}\r\n            name=\"rating\"\r\n            starDimension=\"20px\"\r\n          />\r\n          <div>Native</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\nexport default connect(LanguageForm);\r\n","import React from \"react\";\r\nimport { FormGroup, InputGroup, Classes, Dialog } from \"@blueprintjs/core\";\r\nimport Editor from \"../../DocumentEditor/ClassicEditor\";\r\nimport { connect } from \"../../../Context\";\r\n\r\nconst ContactWorkForm = props => {\r\n  const { sectionIndex, blockIndex, column } = props;\r\n  const { onEditBlock } = props.context;\r\n  /**\r\n * \r\n * @param { id: \"rand_ex3\",\r\n first_name: \"Bill\",\r\n last_name: \"kill\",\r\n profession: \"assassin\",\r\n street_address: \"b-33\",\r\n city: \"las-vegas\",\r\n state_province: \"somewhere\",\r\n zipcode: \"12304\",\r\n phone: \"99424149\",\r\n email: \"BillKill@example.com\",\r\n social_links: \"\"}  \r\n */\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    let newtext = e.target.value;\r\n    let type = e.target.id;\r\n\r\n    return onEditBlock(type, newtext);\r\n  };\r\n\r\n  return props !== null ? (\r\n    <div key={`${props.id}-input-type`}>\r\n      <div\r\n        className={Classes.DIALOG_HEADER}\r\n        style={{ background: \"transparent\" }}\r\n      >\r\n        <h3>Job review </h3>\r\n      </div>\r\n      <div className={Classes.DIALOG_BODY}>\r\n        <FormGroup\r\n          label=\"First name\"\r\n          labelFor=\"text-input\"\r\n          labelInfo=\"(required)\"\r\n        >\r\n          <InputGroup\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            onChange={handleChange}\r\n            large\r\n            id=\"first_name\"\r\n            defaultValue={props.first_name || null}\r\n            placeholder=\"No name ? 🧐\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"Last name\" labelFor=\"text-input\">\r\n          <InputGroup\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            large\r\n            onChange={handleChange}\r\n            id=\"last_name\"\r\n            defaultValue={props.last_name || null}\r\n            placeholder=\"name \"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"Profession\" labelFor=\"text-input\">\r\n          <InputGroup\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            id=\"profession\"\r\n            onChange={handleChange}\r\n            defaultValue={props.profession || null}\r\n            placeholder=\"🎓\"\r\n          />\r\n        </FormGroup>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div>\r\n            <FormGroup label=\"Street address\" labelFor=\"text-input\">\r\n              <InputGroup\r\n                style={{\r\n                  backdropFilter: \"blur(8px)\",\r\n                  background: \"transparent\"\r\n                }}\r\n                id=\"street_address\"\r\n                onChange={handleChange}\r\n                defaultValue={props.street_address || null}\r\n                placeholder=\"🏢\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup label=\"City\" labelFor=\"text-input\">\r\n              <InputGroup\r\n                style={{\r\n                  backdropFilter: \"blur(8px)\",\r\n                  background: \"transparent\"\r\n                }}\r\n                id=\"city\"\r\n                onChange={handleChange}\r\n                defaultValue={props.city || null}\r\n                placeholder=\"🌆\"\r\n              />\r\n            </FormGroup>\r\n          </div>\r\n          <div>\r\n            <FormGroup label=\"State & Province\" labelFor=\"text-input\">\r\n              <InputGroup\r\n                style={{\r\n                  backdropFilter: \"blur(8px)\",\r\n                  background: \"transparent\"\r\n                }}\r\n                id=\"state_province\"\r\n                onChange={handleChange}\r\n                defaultValue={props.state_province || null}\r\n                placeholder=\"🏴󠁧󠁢󠁳󠁣󠁴󠁿\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup label=\"Zipcode\" labelFor=\"text-input\">\r\n              <InputGroup\r\n                style={{\r\n                  backdropFilter: \"blur(8px)\",\r\n                  background: \"transparent\"\r\n                }}\r\n                id=\"zipcode\"\r\n                onChange={handleChange}\r\n                defaultValue={props.zipcode || null}\r\n                placeholder=\"📮 zip\"\r\n              />\r\n            </FormGroup>\r\n          </div>\r\n        </div>\r\n        <FormGroup label=\"Phone number\" labelFor=\"text-input\">\r\n          <InputGroup\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            id=\"phone\"\r\n            onChange={handleChange}\r\n            defaultValue={props.zipcode || null}\r\n            placeholder=\"📱\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"Email\" labelFor=\"text-input\">\r\n          <InputGroup\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n            defaultValue={props.email || null}\r\n            placeholder=\"📧@example.com etc\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"Social links\" labelFor=\"text-input\">\r\n          <InputGroup\r\n            style={{ backdropFilter: \"blur(8px)\", background: \"transparent\" }}\r\n            id=\" social_links\"\r\n            onChange={handleChange}\r\n            defaultValue={props.social_links || null}\r\n            placeholder=\"linked in, fb, instagram etc\"\r\n          />\r\n        </FormGroup>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\nexport default connect(ContactWorkForm);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Classes,\r\n  Position,\r\n  Button,\r\n  Icon,\r\n  PanelStack,\r\n} from \"@blueprintjs/core\";\r\nimport { block_types } from \"../../Context/config\";\r\nimport WorkHistoryForm from \"../CV/BlockForms/workhistoryform\";\r\nimport EducationForm from \"../CV/BlockForms/educationform\";\r\nimport SkillForm from \"../CV/BlockForms/skillform\";\r\nimport LanguageForm from \"../CV/BlockForms/languageform\";\r\nimport ContactForm from \"../CV/BlockForms/contactform\";\r\nimport { RenderIcon } from \"../Icons/RenderIcon\";\r\nimport \"../../slide.css\";\r\nclass SideDrawer extends Component {\r\n  RenderInputform = (args) => {\r\n    if (args === null) return;\r\n    switch (args.blockType) {\r\n      case block_types.main.Work_History:\r\n        return <WorkHistoryForm {...args} />;\r\n      case block_types.main.Education:\r\n        return <EducationForm {...args} />;\r\n      case block_types.main.Skills:\r\n        return <SkillForm {...args} />;\r\n      case block_types.main.Contact:\r\n        return <ContactForm {...args} />;\r\n      case block_types.additional.language:\r\n        return <LanguageForm {...args} />;\r\n      default:\r\n        return <div>I am other</div>;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { targetBlock, sidedrawer, snippets } = this.props.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className={Classes.DRAWER_HEADER} style={{ minHeight: \"50px\" }}>\r\n          <div className={Classes.ICON}>\r\n            {targetBlock !== null\r\n              ? RenderIcon(targetBlock.blockType, 25, snippets.globalColor)\r\n              : null}\r\n          </div>\r\n          <div className={Classes.HEADING}>\r\n            {targetBlock !== null ? targetBlock.sectiontitle : \"section title\"}\r\n          </div>\r\n          <Button\r\n            icon=\"cross\"\r\n            minimal\r\n            onClick={this.props.closeSideDrawer.bind(this)}\r\n          ></Button>\r\n        </div>\r\n        <div className={Classes.DRAWER_BODY}>\r\n          <div className={Classes.DIALOG_BODY}>\r\n            {this.RenderInputform(targetBlock)}\r\n\r\n            {/*   <div className={Classes.DIALOG_FOOTER}>\r\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\r\n                {targetBlock === null ? null : <button>save</button>}\r\n              </div>\r\n            </div>*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SideDrawer;\r\n/**\r\n *\r\n */\r\n","import React from \"react\";\r\nimport { Dialog, Classes, Button } from \"@blueprintjs/core\";\r\nimport { dialog_types, section_types } from \"./config\";\r\nconst Global_Dialog = props => {\r\n  const { dialog } = props.state;\r\n\r\n  const handleClose = () => {\r\n    props.closeDialog();\r\n  };\r\n  const handleAdd = () => {\r\n    if (dialog.targetEl === null) {\r\n      return;\r\n    }\r\n    const { column, sectionIndex, sectionType } = dialog.targetEl;\r\n    if (dialog.targetEl.type === \"block\") {\r\n      props.createBlock(sectionType, column, sectionIndex);\r\n    }\r\n    handleClose();\r\n  };\r\n  const handleDeleteSection = () => {\r\n    if (dialog.targetEl === null) {\r\n      return;\r\n    } else {\r\n      const { column, sectionIndex, blockIndex } = dialog.targetEl;\r\n      if (dialog.targetEl.type === \"section\") {\r\n        props.deleteSection(column, sectionIndex);\r\n      } else if (dialog.targetEl.type === \"block\") {\r\n        props.deleteBlock(column, sectionIndex, blockIndex);\r\n      }\r\n    }\r\n    handleClose();\r\n  };\r\n  const renderInputs = sectionType => {\r\n    let instance;\r\n    switch (sectionType) {\r\n      case section_types.Education:\r\n        instance = \"edu\";\r\n        break;\r\n      case section_types.Work_History:\r\n        instance = \"Workh\";\r\n        break;\r\n      case section_types.Interests:\r\n        instance = \"Interest\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    return <div>{instance}</div>;\r\n  };\r\n  const renderAction = type => {\r\n    let instance;\r\n    switch (type) {\r\n      case dialog_types.ACCEPT:\r\n        instance = (\r\n          <>\r\n            <Button onClick={handleClose}>Close</Button>\r\n\r\n            <Button intent=\"primary\">Accept</Button>\r\n          </>\r\n        );\r\n        break;\r\n      case dialog_types.SUBMIT:\r\n        instance = (\r\n          <>\r\n            <Button onClick={handleClose}>Close</Button>\r\n\r\n            <Button intent=\"primary\">Submit</Button>\r\n          </>\r\n        );\r\n        break;\r\n      case dialog_types.WARN:\r\n        instance = (\r\n          <>\r\n            <Button intent=\"warning\">Ok</Button>\r\n          </>\r\n        );\r\n        break;\r\n      case dialog_types.ADD:\r\n        instance = (\r\n          <>\r\n            <Button onClick={handleClose}>Close</Button>\r\n\r\n            <Button intent=\"success\" onClick={handleAdd}>\r\n              Add\r\n            </Button>\r\n          </>\r\n        );\r\n        break;\r\n      case dialog_types.DELETE:\r\n        instance = (\r\n          <>\r\n            <Button onClick={handleClose}>Close</Button>\r\n\r\n            <Button intent=\"danger\" onClick={handleDeleteSection}>\r\n              Delete\r\n            </Button>\r\n          </>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n    return <div className={Classes.DIALOG_FOOTER_ACTIONS}>{instance}</div>;\r\n  };\r\n  return (\r\n    <Dialog onClose={handleClose} isOpen={dialog.isOpen}>\r\n      <div className={Classes.DIALOG_HEADER}>\r\n        <h2>{dialog.header}</h2>\r\n      </div>\r\n      <div className={Classes.DIALOG_BODY}>\r\n        <h3>{dialog.body}</h3>\r\n        {dialog.type === dialog_types.ADD\r\n          ? renderInputs(dialog.targetEl.sectionType)\r\n          : null}\r\n      </div>\r\n      <div className={Classes.DIALOG_FOOTER}>{renderAction(dialog.type)}</div>\r\n    </Dialog>\r\n  );\r\n};\r\nexport default Global_Dialog;\r\n","import React from \"react\";\nimport { ContextWrapper, Contextulize } from \"./Context\";\nimport Main from \"./components/main\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Drawer from \"./components/Drawer\";\nimport \"./slide.css\";\nimport { Card } from \"@blueprintjs/core\";\nimport PDFconverter from \"./PDFconvert\";\nimport G_Dialog from \"./Context/Global_Dialog\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sideRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <>\n        <ContextWrapper>\n          <Contextulize.Consumer>\n            {store => (\n              <DragDropContext\n                //   onDragStart={store.onDragStart.bind(this)}\n                onDragEnd={store.onDragEnd.bind(this)}\n              >\n                <>\n                  <G_Dialog {...store} />\n                  <Main {...store} />\n\n                  <div style={{ overflow: \"hidden\" }}>\n                    <Card\n                      className={\n                        store.state.sidedrawer.isOpen === true\n                          ? \"slide\"\n                          : \"closed\"\n                      }\n                      style={{\n                        top: \"0\",\n                        zIndex: 10,\n                        background: \"rgb(51,255,255,0.1)\",\n                        backdropFilter: \"blur(7px) \",\n                        WebkitBackdropFilter: \"blur(7px)\",\n                        height: \"100vh\",\n                        overflowY: \"auto\",\n                        padding: 0,\n                        boxShadow:\n                          \"0 0 0 1px rgba(16,22,26,.1),0 1px 1px rgba(16,22,26,.2),0 2px 6px rgba(16,22,26,.2)\"\n                      }}\n                    >\n                      <Drawer {...store} />\n                    </Card>\n                  </div>\n                </>\n              </DragDropContext>\n            )}\n          </Contextulize.Consumer>\n        </ContextWrapper>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n//import \"rsuite/dist/styles/rsuite-default.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"normalize.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}